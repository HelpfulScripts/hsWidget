{
	"id": 0,
	"name": "hsWidget",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 129,
			"name": "\"Button\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
			"comment": {
				"shortText": "# Button widgets\nImplement a number of different push buttons.",
				"text": "## &nbsp; {@link Button.Button Button}\nShows an simple stateless push button with a label\n\nInvoked as `m(Button, <ButtonAttrs>, <content>);`.\n\nSee {@link Button.ButtonAttrs ButtonAttrs}\n\n`<content>`: `m.Children` the text or Vnodes to show in the button\n\n## &nbsp; {@link Button.ToggleButton ToggleButton}\nExtends `Button` to keep a state. Pressing the `ToggleButton` will cycle through each of the states.\n\nInvoked as `m(ToggleButton, <ToggleButtonAttrs>, <content>);`.\n\nSee {@link Button.ToggleButtonAttrs ToggleButtonAttrs}\n\n`<content>`: `m.Child[]` an array of states, one of which will be shown in the button\n\n## &nbsp; {@link Button.OnOffButton OnOffButton}\nExtends `ToggleButton` for two states, 'on' and 'off'.\n\ninvoked as `m(OnOffButton, <OnOffButtonAttrs>);`. `node.children` are ignored.\n\nSee {@link Button.OnOffButtonAttrs OnOffButtonAttrs}\n\n`<content>`: `Vnode` a Vnode to show as button content, e.g. an {@link Icon.Icon Icon}\n\n## &nbsp; {@link Button.IconButton IconButton}\nExtends `ToggleButton` for two states, 'on' and 'off'.\n\ninvoked as `m(OnOffButton, <OnOffButtonAttrs>);`. `node.children` are ignored.\n\nSee {@link Button.OnOffButtonAttrs OnOffButtonAttrs}\n\n`<content>`: `Vnode` a Vnode to show as button content, e.g. an {@link Icon.Icon Icon}\n\n\n### Example\n<example>\n<file name='script.js'>let times = 0;\nlet index = 0;\nlet state = '?';\n\nconst states = [\n    {state:'Alpha', icon:'info'},\n    {state:'Beta',  icon:'warn'},\n    {state:'Gamma', icon:'stop'},\n];\n\nlet text='';\n\nm.mount(root, {view: () => m('', { style:'background-color:white; padding:20px 0;'}, [\n        m('h4', `${text}: pushed ${times} times`),\n        m(hsWidget.Grid, { columns:'', style:'height:50px' }, [\n            m(hsWidget.Button, { \n                    class:'icon1',\n                    onclick: i => { times++; state=i; text='Stateless Pushbutton' },\n                },\n                m(hsWidget.Icon, {mdi:'info'})\n            ),\n            m(hsWidget.ToggleButton, { \n                    class:'icon2',\n                    onclick: i => { times++; state=i; text=`2-state ToggleButton in numeric state ${state}` },\n                },[\n                    m(hsWidget.Icon, {mdi:'stop'}), m(hsWidget.Icon, {mdi:'info'})\n                ]\n            ),\n            m(hsWidget.OnOffButton, { \n                    onclick: (i, newState) => { times++; state=i; text=`OnOffbutton in state '${newState}'` },\n                }, '<>'\n            ),\n            m(hsWidget.IconButton, { \n                    onclick: (i, newState) => { times++; state=i; text=`Iconbutton in state '${newState}'` },\n                }, m(hsWidget.Icon, {mdi:'power'})\n            ),\n        ]),\n    m('h4', 'Simple stateless Pushbutton:'),\n    m(hsWidget.Button, \n        { \n            class:'simple',\n            onclick:() => times++, \n            style:'width:200px;' \n        },\n        `clicked ${times} times`\n    ),\n    m('h4', 'ToggleButton (3 states):'),\n    m(hsWidget.ToggleButton, \n        { \n            class:'toggle',\n            onclick: i => index = i, \n        },\n        states.map(s => m(hsWidget.Icon, {mdi:s.icon}, `state: ${s.state}`))\n    )\n])});\n   \n</file>\n<file name='style.css'>.icons { margin:0 0 0 10px; grid-template-columns: repeat(3, 1fr)}\n.icons .hs_button { padding:0; width:32px;}\n.icon2.state0 { background-color: #fcc; }\n.icon2.state1 { background-color: #ccf; }\n.toggle.state0 { background-color: #88c; }\n.toggle.state0:hover { background-color: #88f !important; }\n.toggle.state1 { background-color: #8c8; }\n.toggle.state1:hover { background-color: #4f4 !important; }\n.toggle.state2 { background-color: #c88; }\n.toggle.state2:hover { background-color: #f44 !important; }\n.toggle.state2.hs_button_pressed { background-color: #fcc !important; }\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 142,
					"name": "Button",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## Button\nShows an simple stateless push button with a label",
						"text": "Invoked as `m(Button, <ButtonAttrs>, <content>);`.\n\nSee {@link Button.ButtonAttrs ButtonAttrs}\n\n`<content>`: `m.Children` the text or Vnodes to show in the button\n"
					},
					"children": [
						{
							"id": 143,
							"name": "pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`true` while the button is pressed down (between a `mousedown` and `mouseup` event."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 144,
							"name": "pressing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "changes the `pressed` state to the value of `down`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 145,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 146,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 147,
													"name": "down",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 87,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 154,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 155,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 156,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 157,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 158,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 148,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 149,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 150,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 133,
														"name": "ButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 89,
									"character": 10
								}
							]
						},
						{
							"id": 151,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 152,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 153,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 133,
														"name": "ButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 94,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								143,
								144
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								154,
								148,
								151
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 82,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 174,
							"name": "ToggleButton"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 244,
					"name": "IconButton",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## IconButton\nExtends `ToggleButton` for two states, 'on' and 'off'.",
						"text": "invoked as `m(OnOffButton, <OnOffButtonAttrs>);`. `node.children` are ignored.\n\nSee {@link Button.OnOffButtonAttrs OnOffButtonAttrs}\n\n`<content>`: is ignored\n"
					},
					"children": [
						{
							"id": 252,
							"name": "numStates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 135,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 176,
								"name": "ToggleButton.numStates"
							}
						},
						{
							"id": 253,
							"name": "pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`true` while the button is pressed down (between a `mousedown` and `mouseup` event."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 143,
								"name": "Button.pressed"
							}
						},
						{
							"id": 254,
							"name": "pressing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "changes the `pressed` state to the value of `down`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 255,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 256,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 257,
													"name": "down",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 87,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 144,
								"name": "Button.pressing"
							}
						},
						{
							"id": 251,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the button's `State` object"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 133,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 109,
								"name": "State"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 175,
								"name": "ToggleButton.state"
							}
						},
						{
							"id": 258,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 259,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 260,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 261,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 262,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 245,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 246,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 247,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 228,
														"name": "IconButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 177,
										"name": "ToggleButton.oninit"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 213,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 177,
								"name": "ToggleButton.oninit"
							}
						},
						{
							"id": 248,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 249,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 250,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 228,
														"name": "IconButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 180,
										"name": "ToggleButton.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 218,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 180,
								"name": "ToggleButton.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								252,
								253,
								254,
								251
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								258,
								245,
								248
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 212,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 174,
							"name": "ToggleButton"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 208,
					"name": "OnOffButton",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## OnOffButton\nExtends `ToggleButton` for two states, 'on' and 'off'.",
						"text": "invoked as `m(OnOffButton, <OnOffButtonAttrs>, <content>);`.\n\nSee {@link Button.OnOffButtonAttrs OnOffButtonAttrs}\n\n`<content>`: `Vnode` a Vnode to show as button content, e.g. an {@link Icon.Icon Icon}.\nIf `undefined`, the `children` will be set to `['off', 'on']`.\n"
					},
					"children": [
						{
							"id": 217,
							"name": "numStates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 135,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 176,
								"name": "ToggleButton.numStates"
							}
						},
						{
							"id": 218,
							"name": "pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`true` while the button is pressed down (between a `mousedown` and `mouseup` event."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 143,
								"name": "Button.pressed"
							}
						},
						{
							"id": 219,
							"name": "pressing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "changes the `pressed` state to the value of `down`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 220,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 221,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 222,
													"name": "down",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 87,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 144,
								"name": "Button.pressing"
							}
						},
						{
							"id": 216,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the button's `State` object"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 133,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 109,
								"name": "State"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 175,
								"name": "ToggleButton.state"
							}
						},
						{
							"id": 209,
							"name": "states",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 182,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "['off', 'on']"
						},
						{
							"id": 223,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 224,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 225,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 226,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 227,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 210,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 211,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 212,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 193,
														"name": "OnOffButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 177,
										"name": "ToggleButton.oninit"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 183,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 177,
								"name": "ToggleButton.oninit"
							}
						},
						{
							"id": 213,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 214,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 215,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 193,
														"name": "OnOffButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 180,
										"name": "ToggleButton.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 189,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 180,
								"name": "ToggleButton.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								217,
								218,
								219,
								216,
								209
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								223,
								210,
								213
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 181,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 174,
							"name": "ToggleButton"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 174,
					"name": "ToggleButton",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## ToggleButton\nExtends `Button` to keep a state. Pressing the `ToggleButton` will cycle through each of the states.",
						"text": "Invoked as `m(ToggleButton, <ToggleButtonAttrs>, <content>);`.\n\nSee {@link Button.ToggleButtonAttrs ToggleButtonAttrs}\n\n`<content>`: `m.Child[]` an array of states, one of which will be shown in the button\n\n"
					},
					"children": [
						{
							"id": 176,
							"name": "numStates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 135,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 183,
							"name": "pressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`true` while the button is pressed down (between a `mousedown` and `mouseup` event."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 84,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 143,
								"name": "Button.pressed"
							}
						},
						{
							"id": 184,
							"name": "pressing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "changes the `pressed` state to the value of `down`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 87,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 185,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 186,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 187,
													"name": "down",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 87,
											"character": 13
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 144,
								"name": "Button.pressing"
							}
						},
						{
							"id": 175,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the button's `State` object"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 133,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 109,
								"name": "State"
							}
						},
						{
							"id": 188,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 189,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 190,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 191,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 192,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 177,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 178,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 179,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 159,
														"name": "ToggleButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 148,
										"name": "Button.oninit"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 137,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 148,
								"name": "Button.oninit"
							}
						},
						{
							"id": 180,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 181,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 182,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 159,
														"name": "ToggleButtonAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 151,
										"name": "Button.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 148,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 151,
								"name": "Button.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								176,
								183,
								184,
								175
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								188,
								177,
								180
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 131,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 142,
							"name": "Button"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 208,
							"name": "OnOffButton"
						},
						{
							"type": "reference",
							"id": 244,
							"name": "IconButton"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 133,
					"name": "ButtonAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 140,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 139,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 134,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 135,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 136,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 137,
													"name": "newStateIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 138,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 69,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 141,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								140,
								139,
								134,
								141
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 67,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 159,
							"name": "ToggleButtonAttrs"
						}
					]
				},
				{
					"id": 130,
					"name": "ClickResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 131,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 132,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 60,
							"character": 30
						}
					]
				},
				{
					"id": 228,
					"name": "IconButtonAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 242,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 241,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 230,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 109,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 160,
								"name": "ToggleButtonAttrs.initial"
							}
						},
						{
							"id": 229,
							"name": "mdi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an `mdi` icon svg string. See {@link Icon.IconAttrs IconAttrs} for details."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 199,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 236,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 237,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 238,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 239,
													"name": "newStateIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 240,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 69,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "ButtonAttrs.onclick"
							}
						},
						{
							"id": 231,
							"name": "stateAccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "returns a function that can be used to programmatically change the state of the button."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 112,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 232,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 233,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 234,
													"name": "stateful",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 91,
														"name": "Stateful"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 112,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 161,
								"name": "ToggleButtonAttrs.stateAccess"
							}
						},
						{
							"id": 235,
							"name": "stateTransition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional state transition function, defaults to `State.transitions.cycle`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 115,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "ToggleButtonAttrs.stateTransition"
							}
						},
						{
							"id": 243,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								242,
								241,
								230,
								229,
								236,
								231,
								235,
								243
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 197,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 193,
							"name": "OnOffButtonAttrs"
						}
					]
				},
				{
					"id": 193,
					"name": "OnOffButtonAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 206,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 205,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 194,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 109,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 160,
								"name": "ToggleButtonAttrs.initial"
							}
						},
						{
							"id": 200,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 201,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 202,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 203,
													"name": "newStateIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 204,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 69,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "ButtonAttrs.onclick"
							}
						},
						{
							"id": 195,
							"name": "stateAccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "returns a function that can be used to programmatically change the state of the button."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 112,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 196,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 197,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 198,
													"name": "stateful",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 91,
														"name": "Stateful"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 112,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 161,
								"name": "ToggleButtonAttrs.stateAccess"
							}
						},
						{
							"id": 199,
							"name": "stateTransition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional state transition function, defaults to `State.transitions.cycle`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 115,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 165,
								"name": "ToggleButtonAttrs.stateTransition"
							}
						},
						{
							"id": 207,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								206,
								205,
								194,
								200,
								195,
								199,
								207
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 167,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 159,
							"name": "ToggleButtonAttrs"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 228,
							"name": "IconButtonAttrs"
						}
					]
				},
				{
					"id": 159,
					"name": "ToggleButtonAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 172,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 171,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 160,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 109,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 166,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 69,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 167,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 168,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 169,
													"name": "newStateIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 170,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 69,
											"character": 12
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 134,
								"name": "ButtonAttrs.onclick"
							}
						},
						{
							"id": 161,
							"name": "stateAccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "returns a function that can be used to programmatically change the state of the button."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 112,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 162,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 163,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 164,
													"name": "stateful",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 91,
														"name": "Stateful"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
											"line": 112,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 165,
							"name": "stateTransition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional state transition function, defaults to `State.transitions.cycle`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 115,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							}
						},
						{
							"id": 173,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								172,
								171,
								160,
								166,
								161,
								165,
								173
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 107,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 133,
							"name": "ButtonAttrs"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 193,
							"name": "OnOffButtonAttrs"
						}
					]
				},
				{
					"id": 263,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 52,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('Button')"
				},
				{
					"id": 264,
					"name": "ClickResponses",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 265,
							"name": "advance",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 62,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 130,
								"name": "ClickResponse"
							},
							"defaultValue": "<ClickResponse>((s:number) => s+1)"
						},
						{
							"id": 266,
							"name": "on",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
									"line": 63,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 130,
								"name": "ClickResponse"
							},
							"defaultValue": "<ClickResponse>((s:number) => 1)"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								265,
								266
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
							"line": 61,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						142,
						244,
						208,
						174
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						133,
						130,
						228,
						193,
						159
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						263
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						264
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Button.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 267,
			"name": "\"Collapsible\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
			"comment": {
				"shortText": "# Collapsible Widget\nreturns a Vnode that can be toggled to expand and contract by clicking on the first `component`.",
				"text": "Invoked as `m(Collapsible, <CollapsibleAttrs>, <content>)`\n\nSee {@link Collapsible.Collapsible Collapsible} and {@link Collapsible.CollapsibleAttrs CollapsibleAttrs}\n\n`<content>`: `m.Child[]` array of text or Vnodes to show in the button;\n<content>[0] deterimines the `title` to display, all remaining array elements\nare part of the collapsible set beneath the title.\n\n### Example\n<example>\n<file name='script.js'>\nm.mount(root, {view: () => m('.hs_white', [\n   m(hsWidget.Collapsible, { class:'.myExample' }, [\n      m('.myTitle', 'click me to toggle'),\n      m('.myItem', 'body item1'),\n      m('.myItem', 'body item2'),\n      m('.myItem', 'body item3')\n   ]),\n   m('', 'This is a background text that will be pushed down by the Collapsible')\n])});\n</file>\n<file name='style.css'>\ndiv { margin-top: 5px; }\n.myTitle {\n   display: inline-block;\n   border-radius: 0px 4px;\n   padding: 1px;\n   border-bottom: 1px solid blue;\n   width: auto;\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 268,
					"name": "Expansion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 269,
							"name": "closed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 46,
									"character": 10
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 272,
							"name": "closing",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 49,
									"character": 11
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 271,
							"name": "open",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 48,
									"character": 8
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 270,
							"name": "opening",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 47,
									"character": 11
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								269,
								272,
								271,
								270
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
							"line": 45,
							"character": 14
						}
					]
				},
				{
					"id": 281,
					"name": "Collapsible",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## Collapsible\nreturns a Vnode that can be toggled to expand and contract by clicking on the first `component`.",
						"text": "Invoked as `m(Collapsible, <CollapsibleAttrs>, <content>)`\n\nSee {@link Collapsible.CollapsibleAttrs CollapsibleAttrs}\n\n`<content>`: `m.Child[]` array of text or Vnodes to show in the button;\n<content>[0] deterimines the `title` to display, all remaining array elements\nare part of the collapsible set beneath the title.\n"
					},
					"children": [
						{
							"id": 282,
							"name": "expanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 79,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 268,
								"name": "Expansion"
							}
						},
						{
							"id": 283,
							"name": "maxHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 80,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 284,
							"name": "toggle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 81,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 285,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 286,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
											"line": 81,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 293,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 294,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 295,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 296,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 297,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 287,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 288,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 289,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 273,
														"name": "CollapsibleAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 82,
									"character": 10
								}
							]
						},
						{
							"id": 290,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 291,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 292,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 273,
														"name": "CollapsibleAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 103,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								282,
								283,
								284
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								293,
								287,
								290
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
							"line": 78,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 273,
					"name": "CollapsibleAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 279,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 278,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 274,
							"name": "isExpanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "indicates whether the `Collapsible` is initially expanded."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 54,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 276,
							"name": "postArrow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the header shows an arrow to the right, pointing left, or down if expanded. Defaults to `false`."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 60,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 275,
							"name": "preArrow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the header shows an arrow to the left, pointing right, or down if expanded. Defaults to `false`."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 57,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 280,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 277,
							"name": "transition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the collapsing transition duration for opening and closing in ms. Defaults to 250."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
									"line": 63,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								279,
								278,
								274,
								276,
								275,
								280,
								277
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
							"line": 52,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						268
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						281
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						273
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Collapsible.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 298,
			"name": "\"EditCheckbox\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
			"comment": {
				"shortText": "# EditCheckbox\nProvides a checkbox",
				"text": "### Profile\ninvoked as `m(EditCheckbox, { <EditCheckbox> }, <content>)`.\n\nSee {@link EditCheckbox.EditCheckboxAttrs EditCheckbox}\n`<content>`: an optional string that will be displayed as the checkbox label; defaults to ''\n\n### Example\n<example>\n<file name='script.js'>\nlet selected = false;\nm.mount(root, {view: () => m('div', [\n   m('h3', 'Checkbox Example'),\n   m('div', [\n     m(hsWidget.EditCheckbox, {\n         class: 'mySelect',\n         update: newValue => selected = newValue\n     }, `${selected}: I am ${selected?'' : 'not '}a robot`)\n   ])\n])});\n\n</file>\n<file name='style.css'>\n.mySelect {\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 308,
					"name": "EditCheckbox",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 310,
							"name": "checked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "`true` if the checkbox is checked."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 52,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 309,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "unique ID for use in `label for`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 311,
							"name": "toggleCheckbox",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 312,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 313,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
											"line": 54,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 320,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 321,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 322,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 323,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 324,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 314,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 316,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 299,
														"name": "EditCheckboxAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 56,
									"character": 10
								}
							]
						},
						{
							"id": 317,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 318,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 319,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 299,
														"name": "EditCheckboxAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 65,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								310,
								309,
								311
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								320,
								314,
								317
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
							"line": 48,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 299,
					"name": "EditCheckboxAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 306,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 305,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 300,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "if `true`, the checkbox will initially be checked. Defaults to `false`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 43,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 307,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 301,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
									"line": 44,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 302,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 303,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 304,
													"name": "checked",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
											"line": 44,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								306,
								305,
								300,
								307,
								301
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
							"line": 41,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 325,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
							"line": 35,
							"character": 48
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('EditSelect')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						308
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						299
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						325
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditCheckbox.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 365,
			"name": "\"EditLabel\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
			"comment": {
				"shortText": "# EditLabel\nProvides a text label that turns into a single-line input field when clicked on",
				"text": "### Attributes:\n- **css**?: `string` an optional css selector\n- **content**: `string` the initial string to show in the text label\n- **update**: `(newValue:string)=>void` callback function called with the updated lable when the input field loses focus\n- **popup**?: `string`: optional message to show in a {@link Popup popup box} upon mouseover.\n- **placeholder**?: optional hint to show for an empty field. Deafults to *'click to enter'*. Provide a `sapce (' ')` to\n     display an empty field.\n\n### Example\n<example>\n<file name='script.js'>\nlet content = 'prior content';\nm.mount(root, {view: () => m('div', [\n   m('h3', 'Edit Label Example'),\n   m('div', [\n     m('span', `current content: '${content}'`),\n     m(hsWidget.EditLabel, {\n         css: '.myLabel',\n         placeholder: 'Enter Value',\n         content: content,\n         update: newValue => content = newValue\n     })\n   ])\n])});\n\n</file>\n<file name='style.css'>\nspan.myLabel { background-color: #eee; }\ninput.myLabel { background-color: #fff; }\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 403,
					"name": "EditDate",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "an extension of `EditLabel` that pareses entries as dates."
					},
					"children": [
						{
							"id": 415,
							"name": "blur",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 416,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 417,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 418,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 54,
											"character": 9
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 378,
								"name": "EditLabel.blur"
							}
						},
						{
							"id": 422,
							"name": "blurIfReturn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 56,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 423,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 424,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 425,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "UIEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 56,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 385,
								"name": "EditLabel.blurIfReturn"
							}
						},
						{
							"id": 414,
							"name": "editable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 377,
								"name": "EditLabel.editable"
							}
						},
						{
							"id": 419,
							"name": "makeEditable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 55,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 420,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 421,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 55,
											"character": 17
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 382,
								"name": "EditLabel.makeEditable"
							}
						},
						{
							"id": 404,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 91,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 405,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 406,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 407,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 91,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 429,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 430,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 431,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 432,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 433,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 408,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 409,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 410,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"id": 392,
										"name": "EditLabel.oninit"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 93,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 392,
								"name": "EditLabel.oninit"
							}
						},
						{
							"id": 426,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 427,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 428,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "m.VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 389,
										"name": "EditLabel.onupdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 57,
									"character": 12
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 389,
								"name": "EditLabel.onupdate"
							}
						},
						{
							"id": 411,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 412,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 413,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "intrinsic",
												"name": "true"
											},
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Vnode"
											},
											{
												"type": "reference",
												"name": "ChildArray"
											}
										]
									},
									"overwrites": {
										"type": "reference",
										"id": 395,
										"name": "EditLabel.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 106,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 395,
								"name": "EditLabel.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								415,
								422,
								414,
								419,
								404
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								429,
								408,
								426,
								411
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
							"line": 90,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 376,
							"name": "EditLabel"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 376,
					"name": "EditLabel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 378,
							"name": "blur",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 54,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 379,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 380,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 381,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 54,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 385,
							"name": "blurIfReturn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 56,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 386,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 387,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 388,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "UIEvent"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 56,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 377,
							"name": "editable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 382,
							"name": "makeEditable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 55,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 383,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 384,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 55,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 398,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 400,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 401,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 402,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 392,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 393,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 394,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 66,
									"character": 10
								}
							]
						},
						{
							"id": 389,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 390,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 391,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "m.VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 57,
									"character": 12
								}
							]
						},
						{
							"id": 395,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 396,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 397,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 366,
														"name": "EditLabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 77,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								378,
								385,
								377,
								382
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								398,
								392,
								389,
								395
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
							"line": 52,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 403,
							"name": "EditDate"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 366,
					"name": "EditLabelAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 374,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 373,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 368,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 48,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 367,
							"name": "popup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							}
						},
						{
							"id": 375,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 369,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
									"line": 49,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 370,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 371,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 372,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
											"line": 49,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								374,
								373,
								368,
								367,
								375,
								369
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
							"line": 46,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 434,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
							"line": 39,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('EditLabel')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						403,
						376
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						366
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						434
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditLabel.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 435,
			"name": "\"EditList\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
			"comment": {
				"shortText": "# EditList\nCreates an auto-extending list of editable rows. The widget is simple to apply yet highly configurable\neven to more complex situations. See examples below.",
				"text": "### Profile\ninvoked as `m(EditList, { <EditListAttrs> }, <content>)`.\n\nSee {@link EditList.EditListAttrs EditListAttrs}\n`<content>`: {@link EditList.Row 'Row[]`} array of the row data to be rendered. Each row data will be\nprovided to calls of `rowRender`.`EditList` ensures that there is always an\nempty row at the end of list so it can be extended\n\n### Example\n<example>\n<file name='script.js'>\nlet content1 = [''];\nlet content2 = [];\n\nm.mount(root, {view: () => m('div', [\n   m('h4', `simple content: '${content1.join(', ')}'`),\n   m(hsWidget.EditList, {\n     rows: content1,\n   }),\n\n   m('h4', `complex content: '${content2.map(r => `${r.value}:${r.selected}`).join(', ')}'`),\n   m(hsWidget.EditList, {\n     css: '.myList',\n     header: 'List Header',\n     defaultRow: {value:'', selected:''},\n     rows: content2,\n     isEmpty: (row) => !(row.value && row.value.length),   // undefined or empty value\n     columnLayout: ['70%', '30%'],\n     rowRender:(row, i) => [\n         m(hsWidget.EditLabel, {\n             css: '.myListElement',\n             content: row.value,\n             placeholder: 'description',\n             update: value => {\n                 content2[i] = content2[i] || {};\n                 content2[i].value = value;\n             }\n         }),\n         m(hsWidget.EditSelect, {\n             css: '.myListElement',\n             selected: row.value,\n             from: ['high', 'med', 'low'],\n             update: value => {\n                 content2[i] = content2[i] || {};\n                 content2[i].selected = value;\n             }\n         }),\n      ]\n   })\n])});\n\n\n\n</file>\n<file name='style.css'>\n.myList {\n   border: 1px solid #aaf;\n   margin: 5px;\n}\n.myListElement {\n   display: inline-block;\n   width: 100%;\n}\nh4 {\n   padding-left:5px;\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 469,
					"name": "EditList",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 473,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 475,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 476,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 477,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 470,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 471,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 472,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 443,
														"name": "EditListAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 149,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								473,
								470
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 148,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 443,
					"name": "EditListAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 467,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 454,
							"name": "collapsible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "makes the list collapsible. This requires `header` to be set. Defaults to `true`."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 117,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 464,
							"name": "columnTemplate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "column template for `Grid` within a row. Defaults to '' (equal-width columns)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 142,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 457,
							"name": "defaultRow",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the default (empty) content row, defaults to `''`\nThis will be added as last element to `node.attrs.rowElements` to ensure an empty row is available."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 133,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 479,
								"name": "ListRow"
							}
						},
						{
							"id": 458,
							"name": "expand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "if truthy, prevents `EditList` from automatically adding new empty rows.\nThis makes the calling program responsible for adding rows to the list."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 139,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 459,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 460,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 461,
													"name": "rows",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												},
												{
													"id": 462,
													"name": "def",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 463,
													"name": "isEmpty",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 436,
														"name": "IsTest"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
											"line": 139,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 465,
							"name": "header",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional header row. If missing, no header row will be shown."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 145,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							}
						},
						{
							"id": 466,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 450,
							"name": "isEmpty",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "function that attributes a row as 'empty'. The default defines empty as an undefined `row`,\nor a row with 0 length."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 114,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 451,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 452,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 453,
													"name": "row",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 479,
														"name": "ListRow"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
											"line": 114,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 456,
							"name": "isExpanded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "if `true`, the list will be initially expanded. Defaults to `false'."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 127,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 455,
							"name": "rowRender",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a {@link EditList.RowRender `RowRender`} function returning a rendered row\nfor the supplied row data. The default is {@link EditList.defaultRender defaultRender},\ncovering a variety of situations."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 124,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 439,
								"name": "RowRender"
							}
						},
						{
							"id": 444,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 105,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 445,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional sorting function for rows; As a default, no sorting happens."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
									"line": 108,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 446,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 447,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 448,
													"name": "a",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 449,
													"name": "b",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
											"line": 108,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 468,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								467,
								454,
								464,
								457,
								458,
								465,
								466,
								450,
								456,
								455,
								444,
								445,
								468
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 103,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 436,
					"name": "IsTest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 437,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 438,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 479,
										"name": "ListRow"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 44,
							"character": 16
						}
					]
				},
				{
					"id": 439,
					"name": "RowRender",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 440,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 441,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 479,
										"name": "ListRow"
									}
								},
								{
									"id": 442,
									"name": "rowNum",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 46,
							"character": 26
						}
					]
				},
				{
					"id": 479,
					"name": "ListRow",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "semantic type alias for the `row` data structure."
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 49,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						]
					}
				},
				{
					"id": 478,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 37,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('EditList')"
				},
				{
					"id": 486,
					"name": "adjustListRowHeight",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 487,
							"name": "adjustListRowHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 488,
									"name": "dom",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 489,
									"name": "indent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"\""
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 83,
							"character": 28
						}
					]
				},
				{
					"id": 480,
					"name": "defIsEmpty",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "the default `isEmpty` test: returns true if either `row` is undefined, or if its length is 0 or undefined.\nThis test matches situations where the row is a simple `string`, or an `array` of `any`s."
					},
					"signatures": [
						{
							"id": 481,
							"name": "defIsEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "the default `isEmpty` test: returns true if either `row` is undefined, or if its length is 0 or undefined.\nThis test matches situations where the row is a simple `string`, or an `array` of `any`s."
							},
							"parameters": [
								{
									"id": 482,
									"name": "row",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 479,
										"name": "ListRow"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 55,
							"character": 16
						}
					]
				},
				{
					"id": 483,
					"name": "defaultRender",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "returns the default row-`render` function:\n- if `row` is an array or an object literal, turn each element into an `EditLabel`\n- otherwise treat `row` as a primitive and turn it into an EditLabel."
					},
					"signatures": [
						{
							"id": 484,
							"name": "defaultRender",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "returns the default row-`render` function:\n- if `row` is an array or an object literal, turn each element into an `EditLabel`\n- otherwise treat `row` as a primitive and turn it into an EditLabel."
							},
							"parameters": [
								{
									"id": 485,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 479,
											"name": "ListRow"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 439,
								"name": "RowRender"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 62,
							"character": 19
						}
					]
				},
				{
					"id": 490,
					"name": "expand",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 491,
							"name": "expand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "expand rows to always show one empty row"
							},
							"parameters": [
								{
									"id": 492,
									"name": "rows",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 493,
									"name": "def",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 494,
									"name": "isEmpty",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 436,
										"name": "IsTest"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
							"line": 93,
							"character": 15
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						469
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						443,
						436,
						439
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						479
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						478
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						486,
						480,
						483,
						490
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditList.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 495,
			"name": "\"EditSelect\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
			"comment": {
				"shortText": "# EditSelect\nProvides a text label with pulldown select capability",
				"text": "### Attributes:\n- from: `string[]` the array to select from\n- selected: `string` the initial string to show in the text label\n- css: the css selector to add to the field\n- update: callback function called when the input field looses focus\n- **popup**?: `string`: optional message to show in a {@link Popup popup box} upon mouseover.\n\n### Example\n<example>\n<file name='script.js'>\nconst choices = ['pizza', 'chicken', 'fries'];\nlet selected = 'none';\nm.mount(root, {view: () => m('div', [\n   m('h3', 'Edit Select Example'),\n   m('div', [\n     m('span', `current content: '${selected}'`),\n     m(hsWidget.EditSelect, {\n         class: 'mySelect',\n         initial: selected,\n         update: newValue => selected = newValue\n     }, choices)\n   ])\n])});\n\n</file>\n<file name='style.css'>\n.mySelect {\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 506,
					"name": "EditSelect",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 508,
							"name": "select",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 54,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 509,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 510,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 511,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
											"line": 54,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 507,
							"name": "selectable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 53,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 518,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 519,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 520,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 521,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 522,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 512,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 514,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 496,
														"name": "EditSelectAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 55,
									"character": 10
								}
							]
						},
						{
							"id": 515,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 516,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 517,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 496,
														"name": "EditSelectAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 65,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								508,
								507
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								518,
								512,
								515
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
							"line": 52,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 496,
					"name": "EditSelectAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 504,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 503,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 502,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 49,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 497,
							"name": "popup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 47,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 505,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 498,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
									"line": 48,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 499,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 500,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 501,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
											"line": 48,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								504,
								503,
								502,
								497,
								505,
								498
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
							"line": 46,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 523,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
							"line": 39,
							"character": 45
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('EditSelect')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						506
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						496
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						523
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditSelect.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 524,
			"name": "\"EditTextarea\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
			"comment": {
				"shortText": "# EditTextarea\nProvides a text label that turns into a multi-line text area when clicked on",
				"text": "### Attributes:\n- **css**?: `string` an optional css selector\n- **content**: `string` the initial string to show in the text label\n- **update**: `(newValue:string)=>void` callback function called with the updated lable when the input field loses focus\n- **placeholder**?: optional hint to show for an empty field. Deafults to *'click to enter'*. Provide a `sapce (' ')` to\n     display an empty field.\n\n### Example\n<example>\n<file name='script.js'>\nlet content = '';\nm.mount(root, {view: () => m('div', [\n   m('h3', 'Edit Label Example'),\n   m('div', [\n     m('span', `current content: '${content}'`),\n     m(hsWidget.EditTextarea, {\n         css: '.myLabel',\n         placeholder: 'Enter Value',\n         content: content,\n         update: newValue => content = newValue\n     })\n   ])\n])});\n\n</file>\n<file name='style.css'>\n.myLabel {\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 535,
					"name": "EditTextarea",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 549,
							"name": "adjustTextAreaHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 67,
									"character": 24
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 550,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 551,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 552,
													"name": "dom",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
											"line": 67,
											"character": 25
										}
									]
								}
							}
						},
						{
							"id": 542,
							"name": "blur",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 65,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 543,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 544,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 545,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
											"line": 65,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 536,
							"name": "editable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 62,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 537,
							"name": "hasFocus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 63,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 546,
							"name": "toggleEditable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 547,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 548,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
											"line": 66,
											"character": 19
										}
									]
								}
							}
						},
						{
							"id": 538,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 64,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 539,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 540,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 541,
													"name": "newValue",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
											"line": 64,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 562,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 563,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 564,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 565,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 566,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 553,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 554,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 555,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 525,
														"name": "EditTextareaAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 68,
									"character": 10
								}
							]
						},
						{
							"id": 556,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 557,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 558,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 525,
														"name": "EditTextareaAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 94,
									"character": 19
								}
							]
						},
						{
							"id": 559,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 560,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 561,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 525,
														"name": "EditTextareaAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 106,
									"character": 15
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								549,
								542,
								536,
								537,
								546,
								538
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								562,
								553,
								556,
								559
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
							"line": 61,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 525,
					"name": "EditTextareaAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 533,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 532,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 531,
							"name": "placeholder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 58,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 530,
							"name": "popup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 57,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							}
						},
						{
							"id": 534,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 526,
							"name": "update",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
									"line": 56,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 527,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 528,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 529,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
											"line": 56,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								533,
								532,
								531,
								530,
								534,
								526
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
							"line": 55,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 568,
					"name": "converter",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
							"line": 46,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "Converter"
					},
					"defaultValue": "new showdown.Converter({\n    tables:                 true,   // enables |...| style tables; requires 2nd |---| line\n    ghCompatibleHeaderId:   true,   // github-style dash-separated header IDs\n    smartIndentationFix:    true,   // fixes ES6 template indentations\n    takslists:              true,   // enable - [ ] task; doesn't seem to work.\n    strikethrough:          true    // enables ~~text~~\n})"
				},
				{
					"id": 567,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
							"line": 38,
							"character": 49
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('EditTextarea')"
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						535
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						525
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						568,
						567
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/EditTextarea.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 569,
			"name": "\"Grid\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
			"comment": {
				"shortText": "# Grid widget\nexposes CSS Grid Layout.",
				"text": "### Profile\ninvoked as\n- `m(Grid, <GridAttrs>, <content>);`\n\nSee {@link Grid.GridAttrs GridAttrs}\n\n\n### Example\n<example height=250px><file name='script.js'>\nlet cells = ['1'];\n\nfunction update() {\n    cells.push(''+(cells.length+1));\n    if (cells.length>5) { cells = ['1']; }\n    setTimeout(update, 1000);\n    m.redraw();\n}\nupdate();\n\nm.mount(root, {view: () => m('.gridExample', m(hsWidget.Grid, { \n        class: 'colGrid',\n        style:'background-color:#ffe; padding:20px 0;',\n        gap:\"5px 5px\",\n        columns:'50px auto auto 50px', \n    }, [\n        '<',\n        m(hsWidget.Grid, {class:'rowGrid', rows:'' }, cells),\n        m(hsWidget.Grid, {class:'rowGrid', rows:'' }, cells),\n        '>'\n    ]),\n)});\n</file>\n<file name='style.css'>\n.gridExample { }\n.colGrid { background-color:#eef; width:100%; height:100%; }\n.rowGrid { background-color:#efe; padding:5px; width:100%; height:100%; }\n.rowGrid .hs_grid_cell:nth-child(even) {background-color:#eee;}\n.rowGrid .hs_grid_cell:nth-child(odd)  {background-color:#fff;}\n.rowGrid div, .colGrid div { text-align:center; vertical-align:middle}\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 577,
					"name": "Grid",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "# Grid"
					},
					"children": [
						{
							"id": 578,
							"name": "rc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 51,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 585,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 586,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 587,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 588,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 589,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 579,
							"name": "gridFormat",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 580,
									"name": "gridFormat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 581,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 570,
												"name": "GridAttrs"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 52,
									"character": 14
								}
							]
						},
						{
							"id": 582,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 583,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 584,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 570,
														"name": "GridAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 63,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								578
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								585,
								579,
								582
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
							"line": 50,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 570,
					"name": "GridAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 575,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 572,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "grid row template. will be passed through as is to grid-template-columns command of the CSS Grid styling"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 37,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 573,
							"name": "gap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "grid-gap; the string will be passed through as is to the CSS Grid styling"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 39,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 574,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 571,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "grid row template. will be passed through as is to grid-template-rows command of the CSS Grid styling"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 576,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								575,
								572,
								573,
								574,
								571,
								576
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
							"line": 33,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						577
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						570
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Grid.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 60,
			"name": "\"Icon\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
			"comment": {
				"shortText": "# Icon widget\nShows an [MDI](https://materialdesignicons.com/) icon with optional text label.\nThe icon will scale to fill the height of the element, which defaults to `1em`.\nThe content will vertically align centered if the icon is higher than the text.",
				"text": "If a predefined icon is used, the provided `mdi` key will als be used as a css class\nselector for the icon. This allows for a semantic coloring of the icon via CSS.\n\n### Profile\ninvoked as `m(Icon, <IconAttrs>, <content>);`.\n\nSee: {@link Icon.IconAttrs IconAttrs}\n\n<example>\n<file name='script.js'>\n/* use: import { mdiLeaf } from '@mdi/js';  */\nconst mdiLeaf = \"M17,8C8,10 5.9,16.17 3.82,21.34L5.71,22L6.66,19.7C7.14,19.87 7.64,20 8,20C19,20 22,3 22,3C21,5 14,5.25 9,6.25C4,7.25 2,11.5 2,13.5C2,15.5 3.75,17.25 3.75,17.25C7,8 17,8 17,8Z\";\n\n\nm.mount(root, {view: () => \n    m(hsWidget.Grid, {style:'background-color: white;', rows:'' }, [\n        m('h3', 'Examples:'),\n        m(hsWidget.Icon, { mdi:'power' }),\n        m(hsWidget.Icon, 'default'),\n        m(hsWidget.Icon, { class:'hui', mdi: mdiLeaf }, 'leaf'),\n        m(hsWidget.Icon, { mdi: 'stop', style:'height: 2em' }, '!Stop!'),\n        m(hsWidget.Icon, { mdi: 'warn', style:'height: 4em' }, m('', ['Warn?', 'Again'])),\n        m('h3', 'Predfined icons:'),\n        ...Object.keys(hsWidget.Icon.predefined).map(k => m(hsWidget.Icon, { mdi:k }, k))\n    ])\n});\n   </file>\n<file name='style.css'>\n.hs_execution .hs_grid.hs_grid_row { height:100%; }\n.hs_execution .hs_grid.hs_grid_col { width:100%; }\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 66,
					"name": "Icon",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "# Icon\nAn MDI icon with text, invoked as\n`m(Icon, <{@link Icon.IconAttrs `IconAttrs`}>, <content>);`"
					},
					"children": [
						{
							"id": 82,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 83,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 84,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 85,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 86,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 79,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 80,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 81,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 61,
														"name": "IconAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "m.Children"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
									"line": 71,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						},
						{
							"id": 67,
							"name": "predefined",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 75,
									"name": "chevronDown",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 66,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiChevronDown"
								},
								{
									"id": 76,
									"name": "chevronLeft",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 67,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiChevronLeft"
								},
								{
									"id": 77,
									"name": "chevronRight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 68,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiChevronRight"
								},
								{
									"id": 74,
									"name": "chevronUp",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 65,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiChevronUp"
								},
								{
									"id": 78,
									"name": "home",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 69,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiHomeOutline"
								},
								{
									"id": 68,
									"name": "info",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 59,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiInformation"
								},
								{
									"id": 73,
									"name": "minus",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 64,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiMinus"
								},
								{
									"id": 72,
									"name": "plus",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 63,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiPlus"
								},
								{
									"id": 71,
									"name": "power",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 62,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiPower"
								},
								{
									"id": 70,
									"name": "stop",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 61,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiAlertOctagon"
								},
								{
									"id": 69,
									"name": "warn",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
											"line": 60,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "mdiAlert"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										75,
										76,
										77,
										74,
										78,
										68,
										73,
										72,
										71,
										70,
										69
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
									"line": 58,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								82,
								79
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								67
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
							"line": 57,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 61,
					"name": "IconAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 64,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 63,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 62,
							"name": "mdi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional [MDI](https://materialdesignicons.com/) icon specifier, defaults to 'info'\n- either an `svg` string for the icon, as imported from `@mdi/js`;\n- or a key for one of the {@link Icon Predefined Icons};"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
									"line": 48,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 65,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								64,
								63,
								62,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
							"line": 42,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						66
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						61
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Icon.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 590,
			"name": "\"Label\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Label.ts",
			"comment": {
				"shortText": "# Label Widget\nShows a text label",
				"text": "### Profile\ninvoked as `m(Label, { <LabelAttrs> }, <content>)`.\n\nSee {@link Label.LabelAttrs LabelAttrs}\n`<content>`: the label content; supports embedded HTML code.\n\n### Example\n<example>\n<file name='script.js'>\nm.mount(root, {view: () => m(hsWidget.Label, {\n     class: 'myLabel',\n     style: 'text-align: right;',\n   }, 'This is a <b>label</b>')\n});\n</file>\n<file name='style.css'>\n.myLabel {\n   background-color: white;\n   margin: 5px;\n}\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 595,
					"name": "Label",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "# Label\nA text label"
					},
					"children": [
						{
							"id": 599,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 600,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 601,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 602,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 603,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 596,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 597,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 598,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 591,
														"name": "LabelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Label.ts",
									"line": 45,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								599,
								596
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Label.ts",
							"line": 44,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 591,
					"name": "LabelAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 593,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 592,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 594,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								593,
								592,
								594
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Label.ts",
							"line": 37,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						595
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						591
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Label.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 705,
			"name": "\"Menu\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
			"comment": {
				"shortText": "# Menu Widget\nCreates a simple menu with several items.",
				"text": "## Menu\nshows a group of menu items but does not manage display of content.\n\ninvoked as `m(Menu, <MenuAttrs>, <content>);`.\nSee {@link Menu.MenuAttrs MenuAttrs}\n\n`<content>`: a `string[]` or `Vnode[]` that determines the menu button number and content.\n\n### Profile\nWhen a button in the group is clicked, the `onclick` method is called with three parameters:\n- the index (0, n-1) of the button clicked,\n- the new state of that button,\n- the array of all button states\n\n## MenuPanel\nshows a group of menu items and manages the display of the corresponding children.\n\ninvoked as `m(MenuPanel, <MenuPanelAttrs>, <content>);`.\nSee {@link Menu.MenuPanelAttrs MenuPanelAttrs}\n\n`<content>`: a `{button: }[]` array that determines the menu button number and content.\n\n### Menu Example\nCreates a menu of items with a callback for changes in the menu selection.\nThe calling program is responsible for acting on the changes, e.g. rendering them.\n<example>\n<file name='script.js'>\nconst items = ['One', 'Two', 'Three'];\nconst content   = ['1st', '2nd', '3rd'];\nlet  theContent = `default content: ${content[1]}`;\n\nm.mount(root, {view: () => m('div', [\n     m('div.mySeparate', 'inline menu example:'),\n     m(hsWidget.Menu, {\n         onclick: index => theContent = content[index] + ' content',\n         initial: 1\n     }, items),\n     m('div.mySeparate', 'Independent Content. The next row is based on the menu selection.'),\n     m('.myMenuContent', `${theContent} managed by the app`)\n])});\n\n</file>\n<file name='style.css'>\n.mySeparate {\n   background-color: #eee;\n   padding: 5px;\n}\n.myMenuContent {\n   border:1px solid #ddd;\n   border-top: 0px solid #ddd;\n   background: #ffd;\n   height: 50px;\n   vertical-align: middle;\n}\n</file>\n</example>\n\n### MenuPanel Example\nSelf-contained `Menu` with content panel.\n<example>\n<file name='script.js'>\nconst items = ['One', 'Two', 'Three'];\nconst content   = ['1st', '2nd', '3rd'];\n\nm.mount(root, {view: () => m(hsWidget.MenuPanel, {\n   menuItems: items,\n   initial: 1,\n}, content.map(c => `${c} managed by 'MenuPanel'`))});\n\n</file>\n<file name='style.css'>\n.hs_menu {\n    background-color: #eef;\n}\n.hs_menu_content {\n    background-color: #d8d8e8;\n    height: 50px;\n    vertical-align:middle;\n}\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 721,
					"name": "Menu",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a simple menu with several items and a callback for changes in the menu selection.\nThe calling program is responsible for acting on the changes, e.g. rendering them."
					},
					"children": [
						{
							"id": 725,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 726,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 727,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 728,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 729,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 722,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 723,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 724,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 706,
														"name": "MenuAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 677,
										"name": "RadioButtons.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 110,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 677,
								"name": "RadioButtons.view"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								725,
								722
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
							"line": 109,
							"character": 17
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 676,
							"name": "RadioButtons"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 739,
					"name": "MenuPanel",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Creates a compound horizontal menu with several items and a panel directly below the menu items."
					},
					"children": [
						{
							"id": 741,
							"name": "change",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 135,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 742,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 743,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 744,
													"name": "index",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
											"line": 135,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 740,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 134,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 751,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 752,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 753,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 754,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 755,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 745,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 746,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 747,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 733,
														"name": "MenuPanelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 136,
									"character": 10
								}
							]
						},
						{
							"id": 748,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 749,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 750,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 733,
														"name": "MenuPanelAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "m.Children"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 140,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								741,
								740
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								751,
								745,
								748
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
							"line": 133,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 706,
					"name": "MenuAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "the attritbutes accepted by a {@link Menu.Menu `Menu`} dialog."
					},
					"children": [
						{
							"id": 719,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 718,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 713,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 102,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"id": 668,
								"name": "RadioButtonsAttrs.initial"
							}
						},
						{
							"id": 707,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 99,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 708,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 709,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 710,
													"name": "buttonIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 711,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 712,
													"name": "states",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
											"line": 99,
											"character": 12
										}
									]
								}
							},
							"overwrites": {
								"type": "reference",
								"id": 662,
								"name": "RadioButtonsAttrs.onclick"
							}
						},
						{
							"id": 714,
							"name": "remoteSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a hook that allows for remote state changes."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 170,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 715,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 716,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 717,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 622,
														"name": "RemoteSet"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 170,
											"character": 15
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 669,
								"name": "RadioButtonsAttrs.remoteSet"
							}
						},
						{
							"id": 720,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								719,
								718,
								713,
								707,
								714,
								720
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
							"line": 97,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 661,
							"name": "RadioButtonsAttrs"
						}
					]
				},
				{
					"id": 730,
					"name": "MenuItem",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 732,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 119,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Child"
							}
						},
						{
							"id": 731,
							"name": "menu",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 118,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Child"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								732,
								731
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
							"line": 117,
							"character": 25
						}
					]
				},
				{
					"id": 733,
					"name": "MenuPanelAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "the attritbutes accepted by a {@link Menu.MenuPanel `MenuPanel`} dialog."
					},
					"children": [
						{
							"id": 737,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 736,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 735,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 126,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 734,
							"name": "menuItems",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an array of menu items to show. If omitted, the item indeces will be used."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
									"line": 125,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "m.Child"
								}
							}
						},
						{
							"id": 738,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								737,
								736,
								735,
								734,
								738
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
							"line": 123,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						721,
						739
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						706,
						730,
						733
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Menu.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 756,
			"name": "\"Modal\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
			"comment": {
				"shortText": "# Modal widget\nreturns a modal Vnode with variable content. The `Modal's` background covers the entire window.",
				"text": "### Profile\ninvoked as `m(Modal, { <ModalAttrs> }, content)`.\n\nSee {@link Modal.ModalAttrs ModalAttrs}\n\n### Example\n<example><file name='script.js'>let dismissals = 0;\nlet modal = false;\nm.mount(root, {view: () => m('.hs_white', [\n    m('h4', {onclick:() => modal=true}, `click me (dismissed ${dismissals} times)`),\n    m(hsWidget.Modal, { \n        dismiss: () => { dismissals++; modal=false; },\n        showModal: ()=>modal\n    }, \n    m('', 'click border to release'))\n])});\n</file></example>\n"
			},
			"children": [
				{
					"id": 767,
					"name": "Modal",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 769,
							"name": "hide",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "will hide the Modal dialog if it is visible."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 38,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 770,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 771,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
											"line": 38,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 768,
							"name": "showModal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if `true`, the Modal dialog will be shown; otherwise hidden."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 35,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 778,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 779,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 780,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 781,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 782,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 772,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 773,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 774,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 757,
														"name": "ModalAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 39,
									"character": 10
								}
							]
						},
						{
							"id": 775,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 776,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 777,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 757,
														"name": "ModalAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 43,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								769,
								768
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								778,
								772,
								775
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
							"line": 33,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 757,
					"name": "ModalAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "the attritbutes accepted by a {@link Modal.Modal `Modal`} dialog."
					},
					"children": [
						{
							"id": 765,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 758,
							"name": "dismiss",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function that will be called to dismiss the modal dialog.\nFor example, clicking in the background will trigger a call to this function."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 26,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 759,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 760,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
											"line": 26,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 764,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 761,
							"name": "showModal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional way of showing or hiding a `Modal` until it is needed:"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
									"line": 29,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 762,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 763,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
											"line": 29,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 766,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								765,
								758,
								764,
								761,
								766
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
							"line": 21,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						767
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						757
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Modal.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 604,
			"name": "\"Optionbuttons\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
			"comment": {
				"shortText": "# Grouped button widgets",
				"text": "## &nbsp; {@link Optionbuttons.OptionButtons OptionButtons}\nShows an group of {@link Button.OnOffButtons `OnOffButtons`} that are created from\nthe passed `node.children`. Any of the buttons can be `on` at the same time.\n\nInvoked as `m(OptionButtons, <OptionButtonsAttrs>, <content>);`.\n\nSee {@link Optionbuttons.OptionButtonsAttrs OptionButtonsAttrs}\n\n`<content>`: `m.Children` the text or Vnodes used to create the embedded `OnOffButtons`\n\n\n## &nbsp; {@link Optionbuttons.RadioButtons RadioButtons}\nShows an group of buttons, only one of which can be pressed at the same time.\n\ninvoked as `m(RadioButtons, <RadioButtonsAttrs>, <content>);`.\n\nSee {@link Optionbuttons.RadioButtonsAttrs RadioButtonsAttrs}\n\n`<content>`: `m.Children` the text or Vnodes used to create the embedded `OnOffButton\n\n### Profile\nWhen a button in the group is clicked, the `onclick` method is called with three parameters:\n- the index (0, n-1) of the button clicked,\n- the new state of that button,\n- the array of all button states\n\nSee {@link OptionButtons.OptionButtonsAttrs OptionButtonsAttrs}\n\n### Example\n<example><file name='script.js'>let times = 0;\nlet index = 0;\n\nconst states = [\n    {text:`important`, icon:'info' },\n    {text:`urgent`,    icon:'warn' },\n    {text:`immediate`, icon:'stop' },\n];\n\nlet optionStates = [0,0,0];\nlet radioStates = [1,0,0];\n\nm.mount(root, {view: () => m('', { style:'background-color:white; padding:20px 20px;'}, [\n    m('h4', `OptionButtons: [${optionStates.join(', ')}]`),\n    m(hsWidget.OptionButtons, { \n            class:'simple',\n            onclick:(newIndex, newState, states) => {\n                times++;\n                index = newIndex;\n                optionStates = states;\n            }, \n        }, \n        // the button content to show\n        states.map(s => m(hsWidget.Icon, {mdi:s.icon}, s.text))\n    ),\n    m('h4', `RadioButtons: [${radioStates.join(', ')}]`),\n    m(hsWidget.RadioButtons, { \n            class:'simple',\n            onclick:(newIndex, newState, states) => {\n                times++;\n                index = newIndex;\n                radioStates = states;\n            }, \n        }, \n        // the button content to show\n        states.map(s => m(hsWidget.Icon, {mdi:s.icon}, s.text))\n    ),\n])});\n   \n</file></example>\n\n"
			},
			"children": [
				{
					"id": 696,
					"name": "IconButtons",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## IconButtons\nShows an group of buttons, only one of which can be pressed at the same time.",
						"text": "invoked as `m(RadioButtons, <RadioButtonsAttrs>, <content>);`.\n\nSee {@link Optionbuttons.RadioButtonsAttrs RadioButtonsAttrs}\n\n`<content>`: `m.Children` the text or Vnodes used to create the embedded `OnOffButton\n"
					},
					"children": [
						{
							"id": 700,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 701,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 702,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 703,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 704,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 697,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 698,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 699,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 685,
														"name": "IconbuttonsAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 221,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								700,
								697
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 220,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 636,
					"name": "OptionButtons",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## OptionButtons\nShows an group of {@link Button.OnOffButtons `OnOffButtons`} that are created from\nthe passed `node.children`. Any of the buttons can be `on` at the same time.",
						"text": "Invoked as `m(OptionButtons, <OptionButtonsAttrs>, <content>);`.\n\nSee {@link Optionbuttons.OptionButtonsAttrs OptionButtonsAttrs}\n\n`<content>`: `m.Children` the text or Vnodes used to create the embedded `OnOffButtons`\n"
					},
					"children": [
						{
							"id": 649,
							"name": "buttonConstraint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 125,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 626,
								"name": "ButtonConstraint"
							}
						},
						{
							"id": 648,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 124,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 605,
								"name": "OptionClick"
							}
						},
						{
							"id": 643,
							"name": "setAccessFn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a callback function used by the constituent buttons to provide access to themselves"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 123,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 644,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 645,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 646,
													"name": "stateful",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 91,
														"name": "Stateful"
													}
												},
												{
													"id": 647,
													"name": "buttonIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 123,
											"character": 16
										}
									]
								}
							}
						},
						{
							"id": 642,
							"name": "stateAccess",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "an array of access providers to the buttons that make up the `OptionButtons` group."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 121,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 91,
									"name": "Stateful"
								}
							}
						},
						{
							"id": 637,
							"name": "constraints",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "predefined constraints on buttons"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 101,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 631,
								"name": "ButtonConstraints"
							},
							"defaultValue": "<ButtonConstraints>{\n        /** no constraints: each button can independently be in any state. */\n        none:  (buttonIndex:number, newState:number, states:number[]) => states,\n        /** radio buttons mode: only one button can be on at a time. */\n        radio: (buttonIndex:number, newState:number, states:number[]) => states.map((s,i) => i===buttonIndex? newState : 0)\n    }"
						},
						{
							"id": 656,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 657,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 658,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 659,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 660,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 650,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 651,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 652,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 610,
														"name": "OptionButtonsAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 127,
									"character": 10
								}
							]
						},
						{
							"id": 638,
							"name": "setButton",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 639,
									"name": "setButton",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 640,
											"name": "buttonIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 641,
											"name": "newState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 108,
									"character": 13
								}
							]
						},
						{
							"id": 653,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 654,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 655,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 610,
														"name": "OptionButtonsAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 139,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								649,
								648,
								643,
								642,
								637
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								656,
								650,
								638,
								653
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 99,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 676,
					"name": "RadioButtons",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "## RadioButtons\nShows an group of buttons, only one of which can be pressed at the same time.",
						"text": "invoked as `m(RadioButtons, <RadioButtonsAttrs>, <content>);`.\n\nSee {@link Optionbuttons.RadioButtonsAttrs RadioButtonsAttrs}\n\n`<content>`: `m.Children` the text or Vnodes used to create the embedded `OnOffButton\n"
					},
					"children": [
						{
							"id": 680,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 681,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 682,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 683,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 684,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 677,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 678,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 679,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 661,
														"name": "RadioButtonsAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 184,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								680,
								677
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 183,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 721,
							"name": "Menu"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 626,
					"name": "ButtonConstraint",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 627,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 628,
									"name": "buttonIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 629,
									"name": "newState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 630,
									"name": "states",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 78,
							"character": 33
						}
					]
				},
				{
					"id": 631,
					"name": "ButtonConstraints",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 634,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"parameters": [
								{
									"id": 635,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 626,
								"name": "ButtonConstraint"
							}
						}
					],
					"children": [
						{
							"id": 632,
							"name": "none",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 83,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"id": 626,
								"name": "ButtonConstraint"
							}
						},
						{
							"id": 633,
							"name": "radio",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 84,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 626,
								"name": "ButtonConstraint"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								632,
								633
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 82,
							"character": 27
						}
					]
				},
				{
					"id": 685,
					"name": "IconbuttonsAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 694,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 693,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 686,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 201,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 687,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 688,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 689,
													"name": "buttonIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 690,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 691,
													"name": "states",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 201,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 692,
							"name": "radioMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "if `true`, creates the icon buttons in radio button mode (only one button\ncan be 'on' at any oen time)."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 207,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 695,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								694,
								693,
								686,
								692,
								695
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 199,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 610,
					"name": "OptionButtonsAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 614,
							"name": "buttonConstraint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a function that determines how the states of other buttons in the group change\nwhen a button is clicked. Defaults to no change in states.\nCan be used to implement a `whack-a-mole`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 68,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 626,
								"name": "ButtonConstraint"
							}
						},
						{
							"id": 613,
							"name": "buttonTransition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An optional state transition scheme for the underlying buttons.\nDefaults to `State.transitions.cycle`."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 61,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							}
						},
						{
							"id": 620,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 619,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 612,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 611,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the button is clicked to inform the customer of the new state."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 52,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 605,
								"name": "OptionClick"
							}
						},
						{
							"id": 615,
							"name": "remoteSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a hook that allows for remote state changes."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 71,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 616,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 617,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 618,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 622,
														"name": "RemoteSet"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 71,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 621,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								614,
								613,
								620,
								619,
								612,
								611,
								615,
								621
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 50,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 605,
					"name": "OptionClick",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 606,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 607,
									"name": "buttonIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 608,
									"name": "newState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 609,
									"name": "states",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 46,
							"character": 21
						}
					]
				},
				{
					"id": 661,
					"name": "RadioButtonsAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 674,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 673,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 668,
							"name": "initial",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "the initial state of the button; defaults to 0"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 167,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 662,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function, called when the bitton is clicked"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 164,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 663,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 664,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 665,
													"name": "buttonIndex",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 666,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 667,
													"name": "states",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 164,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 669,
							"name": "remoteSet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "a hook that allows for remote state changes."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
									"line": 170,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 670,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 671,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 672,
													"name": "r",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"id": 622,
														"name": "RemoteSet"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
											"line": 170,
											"character": 15
										}
									]
								}
							}
						},
						{
							"id": 675,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								674,
								673,
								668,
								662,
								669,
								675
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 162,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 706,
							"name": "MenuAttrs"
						}
					]
				},
				{
					"id": 622,
					"name": "RemoteSet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 623,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 624,
									"name": "buttonIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 625,
									"name": "newState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
							"line": 74,
							"character": 26
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						696,
						636,
						676
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						626,
						631,
						685,
						610,
						605,
						661,
						622
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Optionbuttons.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 783,
			"name": "\"Pivot\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
			"comment": {
				"shortText": "# Pivot table widget\nCreates a pivot view of a table. The view can be structured by providing several `by` headers.\nEach header can be viewed in context of the previous by expanding the collapsible rows.",
				"text": "### Profile\ninvoked as `m(Pivot, { <PivotAttrs> })`.\n\nSee {@link Pivot.PivotAttrs PivotAttrs}\n\n### Example\n<example height=400>\n<file name='script.js'>\nconst headers = ['color', 'shape', 'Value', 'area'];\nconst table = [\n     ['blue',  'square',   17, 'NW'],\n     ['blue',  'square',    7, 'NW'],\n     ['red',   'circle',   37, 'N'],\n     ['blue',  'triangle', 22, 'S'],\n     ['green', 'square',   18, 'NE'],\n     ['green', 'cone',      9, 'SE'],\n     ['blue',  'circle',   12, 'S']\n];\n\n// ColumnAccess function: calculates the sum per row\nconst sums = (namedColumns, value) => {\n     const colName = 'Sums';\n     namedColumns[colName] = (namedColumns[colName]||0) + value;\n     return namedColumns;\n}\nsums.col = 'Value'; // provide\n\nm.mount(root, {view: () => m('.hs_white', [\n   m('h3', 'Simple pivot (click rows to expand)'),\n   m(hsWidget.Pivot, {\n         pivotName: 'Sum',\n         table: {data: table, header:headers},\n         columns:[{Value: 'color'}, {Value: 'Sum'}],\n         by: ['shape', 'area', 'color']\n   }),\n   m('h3', 'Simple pivot, defined headers'),\n   m(hsWidget.Pivot, {\n         pivotName: 'Sum',\n         pivotHeader: ['Sum', 'red', 'green', 'blue'],\n         table: {data: table, header:headers},\n         columns:[{Value: 'color'}, {Value: 'Sum'}],\n         by: ['shape', 'area']\n   }),\n   m('h3', 'Pivot using predefined aggregator functions'),\n   m(hsWidget.Pivot, {\n         pivotName: 'Aggregator Values',\n         table: {data: table, header:headers},\n         columns:[{Value: sums}, {Value:'>Max'}, {Value:'<Min'}, {area:'@Unique'}, {area:'#Count'}],\n         by: ['shape', 'area']\n   }),\n   m('h3', m.trust('Pivot using `ColumnGenerator` functions')),\n   m(hsWidget.Pivot, {\n         pivotName: 'Max Generator',\n         table: {data: table, header:headers},\n         columns:[{Value: sums}, {Value:maxAggregator}, {Value:'<Min'}, {area:'@Unique'}, {area:'#Count'}],\n         by: ['shape', 'area']\n   }),\n])});\n\nfunction maxAggregator(aggregators, value, col, rowData) {\n     aggregators['max'] = Math.max(aggregators['max'] || -1e99, value);\n     return aggregators;\n}\n\n</file>\n<file name='script.css'>\n.hs_execution span { width: 10%; }\n.hs_execution span.name { width: 30%; }\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 833,
					"name": "Pivot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 834,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 349,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 836,
							"name": "newHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 351,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "m.ChildArray"
							}
						},
						{
							"id": 835,
							"name": "oldHeaders",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 350,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 866,
								"name": "HeaderMap"
							}
						},
						{
							"id": 837,
							"name": "pivot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 352,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 808,
								"name": "PivotStruct"
							}
						},
						{
							"id": 844,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 845,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 846,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 847,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 848,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 838,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 839,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 840,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 784,
														"name": "PivotAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 353,
									"character": 10
								}
							]
						},
						{
							"id": 841,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 842,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 843,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 784,
														"name": "PivotAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 360,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								834,
								836,
								835,
								837
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								844,
								838,
								841
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 348,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 799,
					"name": "ColumnGenerator",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A function that will be called for each row of data to produce values for one or several columns in the pivot table.\nThe `ColumnGenerator` function is responsible to `name` those columns in the `aggregators` parameter.\nCall parameters:\n- `aggregators`: am Objet literal mapping pivot column names to an `Aggregator`. The generator can add new column mappings\nthat will show in the pivot table.\n- `value`: the value for the table row being processed, as specified by `tableValueCol` in the `ColumnSpec`\n- `col`: optional column index into the table row providing `value`.\n- `rowData`: optional complete table row being processed."
					},
					"signatures": [
						{
							"id": 800,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A function that will be called for each row of data to produce values for one or several columns in the pivot table.\nThe `ColumnGenerator` function is responsible to `name` those columns in the `aggregators` parameter.\nCall parameters:\n- `aggregators`: am Objet literal mapping pivot column names to an `Aggregator`. The generator can add new column mappings\nthat will show in the pivot table.\n- `value`: the value for the table row being processed, as specified by `tableValueCol` in the `ColumnSpec`\n- `col`: optional column index into the table row providing `value`.\n- `rowData`: optional complete table row being processed."
							},
							"parameters": [
								{
									"id": 801,
									"name": "aggregators",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 802,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 803,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 804,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 850,
														"name": "Aggregator"
													}
												}
											],
											"sources": [
												{
													"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
													"line": 132,
													"character": 17
												}
											]
										}
									}
								},
								{
									"id": 805,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 806,
									"name": "col",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 807,
									"name": "rowData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Array"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 131,
							"character": 32
						}
					]
				},
				{
					"id": 796,
					"name": "ColumnSpec",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A **key/value** pair specifying column contents in the pivot.\n- The `tableValueCol` **key** determines the table column from which to provide values to a `Valuator` function.\n- The **value** specifies the pivot column name, or a {@link Pivot.ColumnGenerator `ColumnGenerator`} function that generates values\nfor one or several pivot column. Three forms are supported:\n    - `string`: If the name exists in the table header, then values in the referenced table column are interpreted\n       as categories that will generate the columns in the pivot.\n    - `string`: if the name does not exist in the table header, then it will be used as a new pivot column name that aggregates\n       over all values of a pivot row.\n    - `ColumnGenerator`: returns a user-provided generator function that is called over all values of a pivot row.",
						"text": "The `string` form also takes an optional `prefix` (e.g. `>Month`) that can be used to specify a predefined aggregation function:\n- '' (no prefix): calculate the sum of encountered values.\n- '>': calculate the maximum of encountered values.\n- '<': calculate the minimnum of encountered values.\n- '@': calculate the count of uniquely encountered values.\n"
					},
					"indexSignature": [
						{
							"id": 797,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A **key/value** pair specifying column contents in the pivot.\n- The `tableValueCol` **key** determines the table column from which to provide values to a `Valuator` function.\n- The **value** specifies the pivot column name, or a {@link Pivot.ColumnGenerator `ColumnGenerator`} function that generates values\nfor one or several pivot column. Three forms are supported:\n    - `string`: If the name exists in the table header, then values in the referenced table column are interpreted\n       as categories that will generate the columns in the pivot.\n    - `string`: if the name does not exist in the table header, then it will be used as a new pivot column name that aggregates\n       over all values of a pivot row.\n    - `ColumnGenerator`: returns a user-provided generator function that is called over all values of a pivot row.",
								"text": "The `string` form also takes an optional `prefix` (e.g. `>Month`) that can be used to specify a predefined aggregation function:\n- '' (no prefix): calculate the sum of encountered values.\n- '>': calculate the maximum of encountered values.\n- '<': calculate the minimnum of encountered values.\n- '@': calculate the count of uniquely encountered values.\n"
							},
							"parameters": [
								{
									"id": 798,
									"name": "tableValueCol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 799,
										"name": "ColumnGenerator"
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 119,
							"character": 27
						}
					]
				},
				{
					"id": 812,
					"name": "ColumnSpecifier",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 813,
							"name": "gen",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 799,
								"name": "ColumnGenerator"
							}
						},
						{
							"id": 814,
							"name": "tableValueCol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 174,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								813,
								814
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 172,
							"character": 25
						}
					]
				},
				{
					"id": 784,
					"name": "PivotAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 792,
							"name": "by",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the sequence of table headers to sort by:"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 99,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 794,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 791,
							"name": "columns",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The table columns to translate into pivot columns. See {@link Pivot.ColumnSpec `ColumnSpec`} for details"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 97,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 796,
									"name": "ColumnSpec"
								}
							}
						},
						{
							"id": 793,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 786,
							"name": "pivotHeader",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional, array of pivot table column headings"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 93,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 854,
								"name": "PivotHeader"
							}
						},
						{
							"id": 785,
							"name": "pivotName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "optional, the top left name of the pivot"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 91,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 795,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						},
						{
							"id": 787,
							"name": "table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the source table data"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 95,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 788,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 790,
											"name": "data",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
													"line": 95,
													"character": 43
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											}
										},
										{
											"id": 789,
											"name": "header",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
													"line": 95,
													"character": 28
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												790,
												789
											]
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
											"line": 95,
											"character": 10
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								792,
								794,
								791,
								793,
								786,
								785,
								795,
								787
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 89,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 808,
					"name": "PivotStruct",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 809,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 166,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 811,
							"name": "tree",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 168,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 808,
									"name": "PivotStruct"
								}
							}
						},
						{
							"id": 810,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 167,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 824,
								"name": "Values"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								809,
								811,
								810
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 165,
							"character": 21
						}
					]
				},
				{
					"id": 815,
					"name": "Valuator",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 816,
							"name": "fn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 178,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 818,
								"name": "ValuatorFn"
							}
						},
						{
							"id": 817,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 179,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								816,
								817
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 177,
							"character": 18
						}
					]
				},
				{
					"id": 818,
					"name": "ValuatorFn",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"signatures": [
						{
							"id": 819,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 820,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 850,
										"name": "Aggregator"
									}
								},
								{
									"id": 821,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 822,
									"name": "colIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 823,
									"name": "rowdata",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 850,
								"name": "Aggregator"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 182,
							"character": 20
						}
					]
				},
				{
					"id": 824,
					"name": "Values",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 825,
							"name": "cols",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 191,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 826,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 827,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 828,
													"name": "colVal",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 850,
												"name": "Aggregator"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
											"line": 191,
											"character": 9
										}
									]
								}
							}
						},
						{
							"id": 829,
							"name": "rows",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 192,
									"character": 8
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 830,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": [
										{
											"id": 831,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {},
											"parameters": [
												{
													"id": 832,
													"name": "rowName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"id": 824,
												"name": "Values"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
											"line": 192,
											"character": 9
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								825,
								829
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 190,
							"character": 16
						}
					]
				},
				{
					"id": 850,
					"name": "Aggregator",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface describing an Aggregator.\nNumeric aggregators accumulate on numbers, e.g. 'sum', 'min', or 'max'\nCategorical aggregators aggregate on an object literal, with each\ncategory instance represented by a number, e.g. the number of occurrences."
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 141,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 851,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"indexSignature": [
										{
											"id": 852,
											"name": "__index",
											"kind": 8192,
											"kindString": "Index signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 853,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
											"line": 141,
											"character": 33
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 866,
					"name": "HeaderMap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 170,
							"character": 14
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 854,
					"name": "PivotHeader",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "array of pivot table column headings.\nArray elements take one of two forms:\n- <string>: a simple string to print; must match the title inferred from the table\n- {<oldKey>: <string>}: translate the inferred title to a new title"
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 151,
							"character": 23
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 855,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"indexSignature": [
												{
													"id": 856,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 857,
															"name": "oldkey",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
													"line": 151,
													"character": 40
												}
											]
										}
									}
								]
							}
						],
						"name": "Array"
					}
				},
				{
					"id": 859,
					"name": "format",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 163,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 860,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 861,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 862,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 863,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 864,
																	"name": "valueOf",
																	"kind": 64,
																	"kindString": "Function",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 865,
																			"name": "valueOf",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-format/index.d.ts",
																			"line": 53,
																			"character": 53
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Functions",
																	"kind": 64,
																	"children": [
																		864
																	]
																}
															],
															"sources": [
																{
																	"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/d3/node_modules/@types/d3-format/index.d.ts",
																	"line": 53,
																	"character": 43
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"defaultValue": "locale.format(',.0~f')"
				},
				{
					"id": 858,
					"name": "locale",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 156,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"name": "FormatLocaleObject"
					},
					"defaultValue": "formatLocale({\n    decimal: \".\",\n    thousands: \" \",\n    grouping: [3],\n    currency: ['','TEUR']\n})"
				},
				{
					"id": 849,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 84,
							"character": 53
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('Pivot')"
				},
				{
					"id": 867,
					"name": "pivots",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 188,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 868,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": [
								{
									"id": 869,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 870,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 808,
										"name": "PivotStruct"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
									"line": 188,
									"character": 13
								}
							]
						}
					}
				},
				{
					"id": 883,
					"name": "count",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "count of unique categories"
					},
					"signatures": [
						{
							"id": 884,
							"name": "count",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "count of unique categories"
							},
							"parameters": [
								{
									"id": 885,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 850,
										"name": "Aggregator"
									}
								},
								{
									"id": 886,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 887,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 888,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 889,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 205,
							"character": 11
						}
					]
				},
				{
					"id": 909,
					"name": "createPivot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 910,
							"name": "createPivot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 911,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								},
								{
									"id": 912,
									"name": "header",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 913,
									"name": "by",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 914,
									"name": "columns",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 796,
												"name": "ColumnSpec"
											}
										],
										"name": "Array"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 808,
								"name": "PivotStruct"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 283,
							"character": 20
						}
					]
				},
				{
					"id": 900,
					"name": "getColAccessFn",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 901,
							"name": "getColAccessFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 902,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 796,
										"name": "ColumnSpec"
									}
								},
								{
									"id": 903,
									"name": "header",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 812,
								"name": "ColumnSpecifier"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 248,
							"character": 20
						}
					]
				},
				{
					"id": 897,
					"name": "getValueAccessFn",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "decodes an element of the `values` attribute in `Pivot` and returns an aggregator function for the\nspecified column in the `table` attribute."
					},
					"signatures": [
						{
							"id": 898,
							"name": "getValueAccessFn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "decodes an element of the `values` attribute in `Pivot` and returns an aggregator function for the\nspecified column in the `table` attribute."
							},
							"parameters": [
								{
									"id": 899,
									"name": "tableValueCol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "the column name reference, as provided by `header`. `index` allows for a prefix that specifies\nthe type of aggregator function to use:\n- '<': calculates the minimum of all numeric values in the column\n- '>': calculates the maximum of all numeric values in the column\n- '@': calculates the count of all unique alphanumeric values in the column\n- otherwise: calculates the sum of all numeric values in the column\nAs an alternative, `index` may directly specifiy an {@link AggFn `AggFn`} in user code."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 815,
								"name": "Valuator"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 231,
							"character": 22
						}
					]
				},
				{
					"id": 904,
					"name": "getValues",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 905,
							"name": "getValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 906,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								},
								{
									"id": 907,
									"name": "byRow",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 908,
									"name": "colsAccess",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 812,
											"name": "ColumnSpecifier"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 824,
								"name": "Values"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 273,
							"character": 18
						}
					]
				},
				{
					"id": 915,
					"name": "makeHeaders",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 916,
							"name": "makeHeaders",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 917,
									"name": "pivot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 808,
										"name": "PivotStruct"
									}
								},
								{
									"id": 918,
									"name": "pivotHeader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 854,
										"name": "PivotHeader"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 302,
							"character": 20
						}
					]
				},
				{
					"id": 919,
					"name": "makeRow",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 920,
							"name": "makeRow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 921,
									"name": "pivot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 808,
										"name": "PivotStruct"
									}
								},
								{
									"id": 922,
									"name": "level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 923,
									"name": "colSequence",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 866,
										"name": "HeaderMap"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 328,
							"character": 13
						}
					]
				},
				{
					"id": 879,
					"name": "max",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "max of numeric values"
					},
					"signatures": [
						{
							"id": 880,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "max of numeric values"
							},
							"parameters": [
								{
									"id": 881,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 882,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 202,
							"character": 9
						}
					]
				},
				{
					"id": 875,
					"name": "min",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "min of numeric values"
					},
					"signatures": [
						{
							"id": 876,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "min of numeric values"
							},
							"parameters": [
								{
									"id": 877,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 878,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 199,
							"character": 9
						}
					]
				},
				{
					"id": 924,
					"name": "showByColumns",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"signatures": [
						{
							"id": 925,
							"name": "showByColumns",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 926,
									"name": "pivot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 808,
										"name": "PivotStruct"
									}
								},
								{
									"id": 927,
									"name": "level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 928,
									"name": "colSequence",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 866,
										"name": "HeaderMap"
									}
								},
								{
									"id": 929,
									"name": "expanded",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 341,
							"character": 19
						}
					]
				},
				{
					"id": 871,
					"name": "sum",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "sum of numeric values"
					},
					"signatures": [
						{
							"id": 872,
							"name": "sum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "sum of numeric values"
							},
							"parameters": [
								{
									"id": 873,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 874,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 196,
							"character": 9
						}
					]
				},
				{
					"id": 890,
					"name": "unique",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "count of unique categories"
					},
					"signatures": [
						{
							"id": 891,
							"name": "unique",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "count of unique categories"
							},
							"parameters": [
								{
									"id": 892,
									"name": "acc",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 850,
										"name": "Aggregator"
									}
								},
								{
									"id": 893,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 894,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": [
												{
													"id": 895,
													"name": "__index",
													"kind": 8192,
													"kindString": "Index signature",
													"flags": {},
													"parameters": [
														{
															"id": 896,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
							"line": 212,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						833
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						799,
						796,
						812,
						784,
						808,
						815,
						818,
						824
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						850,
						866,
						854
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						859,
						858,
						849,
						867
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						883,
						909,
						900,
						897,
						904,
						915,
						919,
						879,
						875,
						924,
						871,
						890
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Pivot.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 326,
			"name": "\"Popup\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
			"comment": {
				"shortText": "# Popup Widget\nopens a popup on an armed Vnode.",
				"text": "### Profile\ninvoked as `m(Popup)`. `Popup` uses fixed positioning, so it can be added to the\nrendering tree anywhere except as a direct `content` element in a `Widget` (where it would interfere with some of `Widget's`\nrendering logic). Only a single `Popup` is needed per app.\n\nTo arm a vnode, call `Popup.arm` which will return a `Mithril` attribute object:\n```\nm('.myContent', Popup.arm(popupContent), myContent);\n```\nAdditional attributes can be passed into the `arm` method and will be passed on to the hosting component. For example,\nto add a `Popup` to the component\n```\nm('.myContent', { onclick: click }, myContent);\n```\ndo the following:\n```\nm('.myContent', Popup.arm(popupContent, {onclick: click}), myContent);\n```\n\n### Attributes (node.attrs):\nnone\n\n### Example\n<example>\n<file name='script.js'>\nlet dismissals = 0;\nlet trigger;\nm.mount(root, {view: () => m('.hs_white', [\n     m('h4', hsWidget.Popup.arm(`popup content`), `hover over me`),\n     m(hsWidget.Popup, {})\n   ])\n});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 331,
					"name": "Popup",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a `Mithril` node that shows a popup when triggered."
					},
					"children": [
						{
							"id": 340,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "state variable containing the content to show."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 82,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "m.Children"
							},
							"defaultValue": "\"...Popup...\""
						},
						{
							"id": 339,
							"name": "showPopup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "state variable, true if popup is visible."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 80,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 337,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the fixed x position of the popup"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 76,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 338,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the fixed y position of the popup"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 78,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 336,
							"name": "instance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isStatic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the singleton instance to use upon mouse events"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 73,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"id": 331,
								"name": "Popup"
							}
						},
						{
							"id": 353,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 354,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 355,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 356,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 357,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 35,
										"name": "Widget.attrs"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 35,
								"name": "Widget.attrs"
							}
						},
						{
							"id": 348,
							"name": "hide",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 349,
									"name": "hide",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 93,
									"character": 16
								}
							]
						},
						{
							"id": 345,
							"name": "move",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 346,
									"name": "move",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 347,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 89,
									"character": 16
								}
							]
						},
						{
							"id": 341,
							"name": "show",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 342,
									"name": "show",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 343,
											"name": "e",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 344,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "m.Children"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 84,
									"character": 16
								}
							]
						},
						{
							"id": 350,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 351,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 352,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 327,
														"name": "PoupAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									},
									"overwrites": {
										"type": "reference",
										"id": 40,
										"name": "Widget.view"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 96,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 40,
								"name": "Widget.view"
							}
						},
						{
							"id": 332,
							"name": "arm",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "arm",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "arms a `Mithril` node by adding mouse listeners to the `attrs` object.",
										"returns": "the extended `attrs` object\n"
									},
									"parameters": [
										{
											"id": 334,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "a `VNode` that specifies the content to show in the popup."
											},
											"type": {
												"type": "reference",
												"name": "m.Children"
											}
										},
										{
											"id": 335,
											"name": "attrs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "optional; an `attrs` object that is extended by mouse listeners."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
									"line": 63,
									"character": 21
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								340,
								339,
								337,
								338,
								336
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								353,
								348,
								345,
								341,
								350,
								332
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
							"line": 56,
							"character": 18
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 34,
							"name": "Widget"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 327,
					"name": "PoupAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 329,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 4,
								"name": "WidgetAttrs.class"
							}
						},
						{
							"id": 328,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3,
								"name": "WidgetAttrs.id"
							}
						},
						{
							"id": 330,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 5,
								"name": "WidgetAttrs.style"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								329,
								328,
								330
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
							"line": 49,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2,
							"name": "WidgetAttrs"
						}
					]
				},
				{
					"id": 358,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
							"line": 42,
							"character": 48
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('Popup')"
				},
				{
					"id": 359,
					"name": "xy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 360,
							"name": "xy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 361,
									"name": "w",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 362,
									"name": "h",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 363,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 364,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
							"line": 104,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						331
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						327
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						358
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						359
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Popup.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 930,
			"name": "\"Slider\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
			"comment": {
				"shortText": "# Slider Widget\nShows a slider that can select a continuous or nominal value out of a range",
				"text": "### Profile\ninvoked as `m(Slider, {\n     range: [number,number] | string[],\n     onchange: (v:number|string) => void\n});`\n\n### Attributes (node.attrs):\n- `onchange:(v:number|string) => void` function to execute when the slider has clicked\n- `range: [number,number] | string[]` range of values the slider can have; either continuous or nomninal\n- `css: string` css class to assign to button tag\n\n### Example\n<example>\n<file name='script.js'>\nlet clicked = 0;\nlet radio = '';\nlet toggle = '';\n\nlet nom;\nlet con;\n\nm.mount(root, {view: () => m('', [\n  m('h4', `Nominal Slider: ${nom}`),\n  m(hsWidget.Slider, {\n     range: ['one', 'two', 'three'],\n     onchange: v => nom=v\n  }),\n  m('h4', `Continuous Slider: ${con}`),\n  m(hsWidget.Slider, {\n     range: [0, 100],\n     onchange: v => con=Math.floor(v*10)/10\n  })\n])});\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 931,
					"name": "Slider",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "# Slider Widget\nShows a slider that can select a continuous or nominal value out of a range",
						"text": "### Profile\ninvoked as `m(Slider, {\n     range: [number,number] | string[],\n     onchange: (v:number|string) => void\n});`\n\n### Attributes (node.attrs):\n- `onchange:(v:number|string) => void` function to execute when the slider has changed\n- `range: [number,number] | string[]` range of values the slider can have; either continuous or nomninal\n- `css: string` css class to assign to button tag\n"
					},
					"children": [
						{
							"id": 932,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 933,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 934,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
									"line": 65,
									"character": 10
								}
							]
						},
						{
							"id": 935,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 936,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 937,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
									"line": 73,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								932,
								935
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 64,
							"character": 19
						}
					]
				},
				{
					"id": 939,
					"name": "SliderRange",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 47,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Array"
					}
				},
				{
					"id": 938,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 44,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "m.Vnode"
					}
				},
				{
					"id": 951,
					"name": "getTargetOffset",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 952,
							"name": "getTargetOffset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 953,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 110,
							"character": 24
						}
					]
				},
				{
					"id": 954,
					"name": "getValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 955,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 956,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 957,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 120,
							"character": 17
						}
					]
				},
				{
					"id": 958,
					"name": "mousedown",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 959,
							"name": "mousedown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 960,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 961,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 128,
							"character": 18
						}
					]
				},
				{
					"id": 962,
					"name": "mousemove",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 963,
							"name": "mousemove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 964,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 965,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 141,
							"character": 18
						}
					]
				},
				{
					"id": 970,
					"name": "mouseout",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 971,
							"name": "mouseout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 972,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 973,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 155,
							"character": 17
						}
					]
				},
				{
					"id": 966,
					"name": "mouseup",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 967,
							"name": "mouseup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 968,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 969,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 148,
							"character": 16
						}
					]
				},
				{
					"id": 974,
					"name": "notify",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 975,
							"name": "notify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 976,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 161,
							"character": 15
						}
					]
				},
				{
					"id": 948,
					"name": "renderLabel",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 949,
							"name": "renderLabel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 950,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 104,
							"character": 20
						}
					]
				},
				{
					"id": 943,
					"name": "renderMarker",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 944,
							"name": "renderMarker",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 945,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 946,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "markers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 939,
										"name": "SliderRange"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 98,
							"character": 21
						}
					]
				},
				{
					"id": 940,
					"name": "renderSlider",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 941,
							"name": "renderSlider",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 942,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
							"line": 91,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						931
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						939,
						938
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						951,
						954,
						958,
						962,
						970,
						966,
						974,
						948,
						943,
						940
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Slider.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 87,
			"name": "\"State\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
			"children": [
				{
					"id": 109,
					"name": "State",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 112,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "new State",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 116,
											"name": "numStates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 117,
											"name": "initialState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 118,
											"name": "transition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 102,
												"name": "StateTransition"
											},
											"defaultValue": "State.transitions.cycle"
										}
									],
									"type": {
										"type": "reference",
										"id": 109,
										"name": "State"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 37,
									"character": 24
								}
							]
						},
						{
							"id": 113,
							"name": "numStates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 39,
									"character": 42
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 111,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"comment": {
								"shortText": "the numeric state; takes values from `0` to `n-1`, with `n` the number of allowed states."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 37,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 114,
							"name": "transition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 39,
									"character": 87
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							}
						},
						{
							"id": 110,
							"name": "transitions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 30,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 106,
								"name": "Transitions"
							},
							"defaultValue": "<Transitions>{\n        /** cycles states, incrementing the state from `0`, to `1`, to `n-1`, then back to `0`.  */\n        cycle: (state:Stateful) => state.setState((state.getState()+1) % state.getNumStates()),\n        /** sets the state to either `0` or `1`, depending on if `input` is `false` or `true` */\n        onoff: (state:Stateful, input:boolean) => state.setState(input? 1 : 0)\n    }"
						},
						{
							"id": 126,
							"name": "advance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 127,
									"name": "advance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 128,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 46,
									"character": 18
								}
							]
						},
						{
							"id": 119,
							"name": "getNumStates",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 120,
									"name": "getNumStates",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 42,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 92,
								"name": "Stateful.getNumStates"
							}
						},
						{
							"id": 121,
							"name": "getState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "getState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 43,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 95,
								"name": "Stateful.getState"
							}
						},
						{
							"id": 123,
							"name": "setState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 124,
									"name": "setState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 125,
											"name": "newState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 44,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 98,
								"name": "Stateful.setState"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								112
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								113,
								111,
								114,
								110
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								126,
								119,
								121,
								123
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
							"line": 29,
							"character": 18
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 91,
							"name": "Stateful"
						}
					]
				},
				{
					"id": 88,
					"name": "StateSetter",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "a function that sets the button state to `newState`, and returns the new state."
					},
					"signatures": [
						{
							"id": 89,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "a function that sets the button state to `newState`, and returns the new state."
							},
							"parameters": [
								{
									"id": 90,
									"name": "newState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
							"line": 2,
							"character": 28
						}
					]
				},
				{
					"id": 102,
					"name": "StateTransition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "transitions `state` from its current state to a new state depending on `input`."
					},
					"signatures": [
						{
							"id": 103,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "transitions `state` from its current state to a new state depending on `input`."
							},
							"parameters": [
								{
									"id": 104,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "the `State` to transition"
									},
									"type": {
										"type": "reference",
										"id": 91,
										"name": "Stateful"
									}
								},
								{
									"id": 105,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"shortText": "optional input value to determine state transition\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
							"line": 17,
							"character": 32
						}
					]
				},
				{
					"id": 91,
					"name": "Stateful",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 92,
							"name": "getNumStates",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 7,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 93,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 94,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
											"line": 7,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 95,
							"name": "getState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 8,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 96,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 97,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
											"line": 8,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 98,
							"name": "setState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 9,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 99,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 100,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 101,
													"name": "newState",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
											"line": 9,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								92,
								95,
								98
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
							"line": 6,
							"character": 25
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 109,
							"name": "State"
						}
					]
				},
				{
					"id": 106,
					"name": "Transitions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 107,
							"name": "cycle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "cycles states, incrementing the state from `0`, to `1`, to `n-1`, then back to `0`."
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 23,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							}
						},
						{
							"id": 108,
							"name": "onoff",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "sets the state to either `0` or `1`, depending on if `input` is `false` or `true`"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 102,
								"name": "StateTransition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								107,
								108
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
							"line": 21,
							"character": 21
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						109
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						88,
						102,
						91,
						106
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/State.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 977,
			"name": "\"ToolbarButton\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
			"comment": {
				"shortText": "# Toolbar Button\ncreates a set of buttons at the corner of a positioned panel.",
				"text": "### Profile\ninvoked as `m(ToolbarButton, { <Attributes> })`\n\n### Attributes (node.attrs):\n- `symbols: string | string[]` a symbol, or array of symbols\n- `onclick: ()=>void` a function that is called when the modal box is dismissed\n\n### Example\n<example height=450>\n<file name='script.js'>\nconst clicked = {}\nconst keys = Object.keys(hsWidget.ButtonSymbols);\nconst groupsOf4 = [];\nlet batch = [];\nfor (let i=0; i < keys.length; i++) {\n   if (i % 4 === 0) {\n      batch = []\n      groupsOf4.push(batch);\n   }\n   batch.push(keys[i]);\n}\n\nm.mount(root, {view: () => m('', [\n   m('', keys.map(       // single symbols\n      bn => m('.myPositioned', [\n         clicked[bn]? m('.myClicked', 'Yayy!!') : m('', bn),\n         m(hsWidget.ToolbarButton, { symbols:hsWidget.ToolbarButton.getSymbol(bn), onclick:click(bn) })\n      ])\n   )),\n   m('', groupsOf4.map(  // groups of 4 symbols\n      batch => m('.myPositioned', [\n         clicked[batch[0]]? m('.myClicked', 'Yayy!!') : m('', batch[0]),\n         m(hsWidget.ToolbarButton, { symbols:batch.map(bt => hsWidget.ToolbarButton.getSymbol(bt)), onclick:click(batch[0]) })\n      ])\n   ))\n])});\n\nfunction click(button) {\n     return () => {\n         clicked[button] = true;\n         setTimeout(reset(button), 800);\n     }\n}\n\nfunction reset(button) {\n     return () => {\n         clicked[button] = false;\n         m.redraw();\n     }\n}\n</file>\n<file name='style.css'>\n.myClicked { background-color: #efe; }\n.myPositioned {\n     position: relative;\n     display: inline-block;\n     box-sizing: border-box;\n     background-color: #fff;\n     text-align: center;\n     font-size: 70%;\n     margin:  2px;\n     padding-top: 20px;\n     height: 50px;\n     width:  70px;\n}\n.hs_corner_button { color: #008; }\n</file>\n</example>\n"
			},
			"children": [
				{
					"id": 978,
					"name": "ToolbarButton",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 982,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 983,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 984,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 117,
									"character": 8
								}
							]
						},
						{
							"id": 979,
							"name": "getSymbol",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 980,
									"name": "getSymbol",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 981,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 114,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								982,
								979
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
							"line": 112,
							"character": 26
						}
					]
				},
				{
					"id": 985,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
							"line": 77,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "m.Vnode"
					}
				},
				{
					"id": 986,
					"name": "ButtonSymbols",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true,
						"isConst": true
					},
					"children": [
						{
							"id": 1041,
							"name": "again",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1042,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 107,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&#8635;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1042
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 107,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1037,
							"name": "bullet",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1038,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 105,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&bull;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1038
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 105,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 987,
							"name": "cross",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 988,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 80,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&times;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										988
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 80,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1019,
							"name": "dArrow",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1020,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 96,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&darr;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1020
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 96,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 993,
							"name": "dLeft",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 994,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 83,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&laquo;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										994
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 83,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 995,
							"name": "dRight",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 996,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 84,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&raquo;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										996
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 84,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1011,
							"name": "down",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1012,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 92,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&or;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1012
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 92,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1007,
							"name": "downTri",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1008,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 90,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&dtrif;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1008
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 90,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1033,
							"name": "ellipsis",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1034,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 103,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&hellip;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1034
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 103,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1021,
							"name": "empty",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1022,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 97,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&#9675;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1022
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 97,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1023,
							"name": "emptySlash",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1024,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 98,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&empty;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1024
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 98,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1045,
							"name": "end",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1046,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 109,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&#8690;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1046
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 109,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1039,
							"name": "enter",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1040,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 106,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&crarr;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1040
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1013,
							"name": "lArrow",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1014,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 93,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&larr;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1014
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 93,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 997,
							"name": "left",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 998,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 85,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&lsaquo;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										998
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 85,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1001,
							"name": "leftTri",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1002,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 87,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&ltrif;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1002
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 87,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1029,
							"name": "lines3",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1030,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 101,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&equiv;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1030
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 101,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 989,
							"name": "minus",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 990,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 81,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&minus;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										990
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 81,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1027,
							"name": "o",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1028,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 100,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&omicron;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1028
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 100,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1025,
							"name": "oSlash",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1026,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 99,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&oslash;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1026
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 99,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 991,
							"name": "plus",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 992,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 82,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"+\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										992
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 82,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1015,
							"name": "rArrow",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1016,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 94,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&rarr;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1016
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 94,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 999,
							"name": "right",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1000,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 86,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&rsaquo;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1000
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 86,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1003,
							"name": "rightTri",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1004,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 88,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&rtrif;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1004
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 88,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1043,
							"name": "start",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1044,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 108,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&#8689;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1044
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 108,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1031,
							"name": "sum",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1032,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 102,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&Sigma;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1032
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 102,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1017,
							"name": "uArrow",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1018,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 95,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&uarr;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1018
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 95,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1009,
							"name": "up",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1010,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 91,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&and;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1010
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 91,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1005,
							"name": "upTri",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1006,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 89,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&utrif;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1006
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 89,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1035,
							"name": "vertEllips",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1036,
									"name": "sym",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
											"line": 104,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"&#8285;\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1036
									]
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
									"line": 104,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								1041,
								1037,
								987,
								1019,
								993,
								995,
								1011,
								1007,
								1033,
								1021,
								1023,
								1045,
								1039,
								1013,
								997,
								1001,
								1029,
								989,
								1027,
								1025,
								991,
								1015,
								999,
								1003,
								1043,
								1031,
								1017,
								1009,
								1005,
								1035
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
							"line": 79,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						978
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						985
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						986
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/ToolbarButton.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1047,
			"name": "\"TypeAhead\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
			"comment": {
				"shortText": "# TypeAhead\nProvides a list search box with a type-ahead dropdown to show valid options that match the regex search input.",
				"text": "### Profile\ninvoked as `m(hsWidget.TypeAhead, { <Attributes> });`\n\n### Attributes (node.attrs):\n- **list**: `string | string[]` the list to search in. If `list` is a string, it serves\n   as a URL to a `json` file containing an array of search terms. Else, if it is a\n   string[] it serves directly as an array of search terms\n- **placeholder**: `string` an indicator what to enter in the search box\n- **onsubmit**: `(term:string, matches:string[]) => void`  a function to call with the selected `term`, as\n     well as all `matches` to the current filter term.\n- **autofocus**?: `boolean` whether the search box automatically gets the focus, defaults to `true`\n- **autocomplete**?: `boolean` if true, autocompletes the input with the first start-of-word match in the list\n     defaults to `true`\n\n### Example\n<example>\n<file name='script.js'>\nlet hero = '';\nlet friend = '';\nm.mount(root, {view: () => m('.hs_white', [\n     m('h4', hero.length? `Selected: ${hero}` : 'Local List: Search for a Superhero'),\n     m(hsWidget.TypeAhead, {\n        placeholder: 'favorite hero',\n        onsubmit: item => hero = item,\n        list: ['Batman', 'Superman', 'Spiderman', 'Hulk']\n     }),\n     m('h4', friend.length? `Selected: ${friend}` : 'Remote List: Search for a Friend'),\n     m(hsWidget.TypeAhead, {\n        placeholder: 'best friend',\n        onsubmit: item => friend = item,\n        autofocus: true,\n        list: 'example/search.json'\n     })\n  ])\n});\n</file>\n</example>\n\n"
			},
			"children": [
				{
					"id": 1048,
					"name": "GetList",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1051,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1056,
									"name": "new GetList",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1057,
											"name": "map",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1058,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1059,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1060,
																	"name": "item",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
															"line": 72,
															"character": 31
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1048,
										"name": "GetList"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 70,
									"character": 30
								}
							]
						},
						{
							"id": 1050,
							"name": "list",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 70,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 1052,
							"name": "map",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isOptional": true,
								"isConstructorProperty": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 72,
									"character": 29
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1053,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1054,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1055,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
											"line": 72,
											"character": 31
										}
									]
								}
							}
						},
						{
							"id": 1049,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 69,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1064,
							"name": "captureList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true
							},
							"signatures": [
								{
									"id": 1065,
									"name": "captureList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1066,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 1067,
											"name": "map",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1068,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1069,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1070,
																	"name": "l",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
															"line": 88,
															"character": 40
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 88,
									"character": 23
								}
							]
						},
						{
							"id": 1061,
							"name": "search",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true
							},
							"signatures": [
								{
									"id": 1062,
									"name": "search",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1063,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 75,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1051
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1050,
								1052,
								1049
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1064,
								1061
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 68,
							"character": 13
						}
					]
				},
				{
					"id": 1071,
					"name": "TypeAhead",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1072,
							"name": "gl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 95,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 1048,
								"name": "GetList"
							},
							"defaultValue": "new GetList()"
						},
						{
							"id": 1073,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1074,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1075,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 96,
									"character": 10
								}
							]
						},
						{
							"id": 1076,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1077,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1078,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Vnode"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
									"line": 104,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1072
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1073,
								1076
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 94,
							"character": 22
						}
					]
				},
				{
					"id": 1080,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 48,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "m.Vnode"
					}
				},
				{
					"id": 1079,
					"name": "log",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 46,
							"character": 40
						}
					],
					"type": {
						"type": "reference",
						"name": "Log"
					},
					"defaultValue": "new Log('TypeAhead')"
				},
				{
					"id": 1085,
					"name": "autoComplete",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1086,
							"name": "autoComplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "adds"
							},
							"parameters": [
								{
									"id": 1087,
									"name": "typed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the text typed so far"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1088,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Vnode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 175,
							"character": 21
						}
					]
				},
				{
					"id": 1081,
					"name": "emphasize",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1082,
							"name": "emphasize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1083,
									"name": "item",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1084,
									"name": "match",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Vnode"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
							"line": 51,
							"character": 18
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1048,
						1071
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1080
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1079
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1085,
						1081
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/TypeAhead.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"Widget\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
			"children": [
				{
					"id": 34,
					"name": "Widget",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"children": [
						{
							"id": 35,
							"name": "attrs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 36,
									"name": "attrs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "returns a new object literal that can be used as a `node.attrs` object.\nIt merges any of the `WidgetsAttrs` from input `a` with fields provided in `others`.\nIn an extended class, call as follow:\n```\nreturn m(<selector>, this.attrs(node.attrs, {\n     param1: value1,\n     param2: value2\n}))\n```\nIf `others` contains elements of `WidgetAttrs`, then\n- `id` is used from `a`\n- `class` is added to any definition in `a`\n- `style` is added to any definition in `a`"
									},
									"typeParameter": [
										{
											"id": 37,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										}
									],
									"parameters": [
										{
											"id": 38,
											"name": "a",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"comment": {
												"text": "the provided `attrs` object, e.g. from `node.attrs`"
											},
											"type": {
												"type": "reference",
												"id": 2,
												"name": "WidgetAttrs"
											}
										},
										{
											"id": 39,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"comment": {
												"text": "new attributes to add to the resulting `attrs` object.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "A",
												"constraint": {
													"type": "reference",
													"id": 2,
													"name": "WidgetAttrs"
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "A",
										"constraint": {
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 42,
									"character": 19
								}
							]
						},
						{
							"id": 40,
							"name": "view",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 41,
									"name": "view",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 42,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "intrinsic",
														"name": "this"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 59,
										"name": "ViewResult"
									}
								}
							],
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 49,
									"character": 17
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								35,
								40
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 24,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 66,
							"name": "Icon"
						},
						{
							"type": "reference",
							"id": 142,
							"name": "Button"
						},
						{
							"type": "reference",
							"id": 281,
							"name": "Collapsible"
						},
						{
							"type": "reference",
							"id": 308,
							"name": "EditCheckbox"
						},
						{
							"type": "reference",
							"id": 331,
							"name": "Popup"
						},
						{
							"type": "reference",
							"id": 376,
							"name": "EditLabel"
						},
						{
							"type": "reference",
							"id": 469,
							"name": "EditList"
						},
						{
							"type": "reference",
							"id": 506,
							"name": "EditSelect"
						},
						{
							"type": "reference",
							"id": 535,
							"name": "EditTextarea"
						},
						{
							"type": "reference",
							"id": 577,
							"name": "Grid"
						},
						{
							"type": "reference",
							"id": 595,
							"name": "Label"
						},
						{
							"type": "reference",
							"id": 636,
							"name": "OptionButtons"
						},
						{
							"type": "reference",
							"id": 676,
							"name": "RadioButtons"
						},
						{
							"type": "reference",
							"id": 696,
							"name": "IconButtons"
						},
						{
							"type": "reference",
							"id": 739,
							"name": "MenuPanel"
						},
						{
							"type": "reference",
							"id": 767,
							"name": "Modal"
						},
						{
							"type": "reference",
							"id": 833,
							"name": "Pivot"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								}
							],
							"name": "ClassComponent"
						}
					]
				},
				{
					"id": 43,
					"name": "MouseEventsAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Mouse event hooks in Widget attributes."
					},
					"children": [
						{
							"id": 44,
							"name": "onclick",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 45,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 46,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 47,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
											"line": 55,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 48,
							"name": "onmousedown",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 56,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 49,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 50,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 51,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
											"line": 56,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 52,
							"name": "onmouseup",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 57,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 53,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 54,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {
												"isExported": true
											},
											"parameters": [
												{
													"id": 55,
													"name": "event",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isExported": true
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
											"line": 57,
											"character": 15
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								44,
								48,
								52
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 54,
							"character": 33
						}
					]
				},
				{
					"id": 2,
					"name": "WidgetAttrs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4,
							"name": "class",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS class (e.g., `myWidget`) to add to the main widget class (->`.myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional CSS ID (e.g., `myWidget`) to define the main widget ID (-> `#myWidget`)"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "style",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "an optional pre-computed CSS style string to add to the main widget"
							},
							"sources": [
								{
									"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
									"line": 18,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4,
								3,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 10,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 61,
							"name": "IconAttrs"
						},
						{
							"type": "reference",
							"id": 133,
							"name": "ButtonAttrs"
						},
						{
							"type": "reference",
							"id": 273,
							"name": "CollapsibleAttrs"
						},
						{
							"type": "reference",
							"id": 299,
							"name": "EditCheckboxAttrs"
						},
						{
							"type": "reference",
							"id": 327,
							"name": "PoupAttrs"
						},
						{
							"type": "reference",
							"id": 366,
							"name": "EditLabelAttrs"
						},
						{
							"type": "reference",
							"id": 443,
							"name": "EditListAttrs"
						},
						{
							"type": "reference",
							"id": 496,
							"name": "EditSelectAttrs"
						},
						{
							"type": "reference",
							"id": 525,
							"name": "EditTextareaAttrs"
						},
						{
							"type": "reference",
							"id": 570,
							"name": "GridAttrs"
						},
						{
							"type": "reference",
							"id": 591,
							"name": "LabelAttrs"
						},
						{
							"type": "reference",
							"id": 610,
							"name": "OptionButtonsAttrs"
						},
						{
							"type": "reference",
							"id": 661,
							"name": "RadioButtonsAttrs"
						},
						{
							"type": "reference",
							"id": 685,
							"name": "IconbuttonsAttrs"
						},
						{
							"type": "reference",
							"id": 733,
							"name": "MenuPanelAttrs"
						},
						{
							"type": "reference",
							"id": 757,
							"name": "ModalAttrs"
						},
						{
							"type": "reference",
							"id": 784,
							"name": "PivotAttrs"
						}
					]
				},
				{
					"id": 6,
					"name": "WidgetState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"indexSignature": [
						{
							"id": 32,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "WORKAROUND: TypeScript 2.4 does not allow extending an interface with all-optional properties."
							},
							"parameters": [
								{
									"id": 33,
									"name": "_",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 15,
							"name": "onbeforeremove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 16,
									"name": "onbeforeremove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The onbeforeremove hook is called before a DOM element is detached from the document. If a Promise is returned, Mithril only detaches the DOM element after the promise completes."
									},
									"parameters": [
										{
											"id": 17,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 18,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 15,
										"name": "Lifecycle.onbeforeremove"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 32,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 15,
								"name": "Lifecycle.onbeforeremove"
							}
						},
						{
							"id": 23,
							"name": "onbeforeupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 24,
									"name": "onbeforeupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The onbeforeupdate hook is called before a vnode is diffed in a update."
									},
									"parameters": [
										{
											"id": 25,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 26,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "Vnode"
											}
										},
										{
											"id": 27,
											"name": "old",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 23,
										"name": "Lifecycle.onbeforeupdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 36,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 23,
								"name": "Lifecycle.onbeforeupdate"
							}
						},
						{
							"id": 11,
							"name": "oncreate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 12,
									"name": "oncreate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The oncreate hook is called after a DOM element is created and attached to the document."
									},
									"parameters": [
										{
											"id": 13,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 14,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 11,
										"name": "Lifecycle.oncreate"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 30,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 11,
								"name": "Lifecycle.oncreate"
							}
						},
						{
							"id": 7,
							"name": "oninit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 8,
									"name": "oninit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The oninit hook is called before a vnode is touched by the virtual DOM engine."
									},
									"parameters": [
										{
											"id": 9,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 10,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "Vnode"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 7,
										"name": "Lifecycle.oninit"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 7,
								"name": "Lifecycle.oninit"
							}
						},
						{
							"id": 19,
							"name": "onremove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 20,
									"name": "onremove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The onremove hook is called before a DOM element is removed from the document."
									},
									"parameters": [
										{
											"id": 21,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 22,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 19,
										"name": "Lifecycle.onremove"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 34,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 19,
								"name": "Lifecycle.onremove"
							}
						},
						{
							"id": 28,
							"name": "onupdate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 29,
									"name": "onupdate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The onupdate hook is called after a DOM element is updated, while attached to the document."
									},
									"parameters": [
										{
											"id": 30,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"id": 6,
														"name": "WidgetState"
													}
												],
												"name": "m.Lifecycle"
											}
										},
										{
											"id": 31,
											"name": "vnode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"name": "WidgetAttrs"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 2,
																"name": "WidgetAttrs"
															},
															{
																"type": "reference",
																"id": 6,
																"name": "WidgetState"
															}
														],
														"name": "m.Lifecycle"
													}
												],
												"name": "VnodeDOM"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 28,
										"name": "Lifecycle.onupdate"
									}
								}
							],
							"sources": [
								{
									"fileName": "Shared/Sites/staging/apps/hsDocs/node_modules/@types/mithril/index.d.ts",
									"line": 38,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 28,
								"name": "Lifecycle.onupdate"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								15,
								23,
								11,
								7,
								19,
								28
							]
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 21,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 2,
									"name": "WidgetAttrs"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 2,
											"name": "WidgetAttrs"
										},
										{
											"type": "reference",
											"id": 6,
											"name": "WidgetState"
										}
									],
									"name": "m.Lifecycle"
								}
							],
							"name": "Lifecycle"
						}
					]
				},
				{
					"id": 59,
					"name": "ViewResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 7,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "m.Children"
							},
							{
								"type": "intrinsic",
								"name": "null"
							},
							{
								"type": "intrinsic",
								"name": "void"
							}
						]
					}
				},
				{
					"id": 56,
					"name": "Vnode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 57,
							"name": "AttrsType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						},
						{
							"id": 58,
							"name": "StateType",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 6,
								"name": "WidgetState"
							}
						}
					],
					"sources": [
						{
							"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
							"line": 6,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "AttrsType"
							},
							{
								"type": "typeParameter",
								"name": "StateType",
								"constraint": {
									"type": "reference",
									"id": 6,
									"name": "WidgetState"
								}
							}
						],
						"name": "m.Vnode"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						34
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						43,
						2,
						6
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						59,
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/Widget.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1089,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/index.ts",
			"comment": {
				"tags": [
					{
						"tag": "description",
						"text": "hsWidgets: Library of UI screen elements.\n"
					}
				]
			},
			"children": [
				{
					"id": 1142,
					"name": "Aggregator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 850
				},
				{
					"id": 1093,
					"name": "Button",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 142
				},
				{
					"id": 1092,
					"name": "ButtonAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 133
				},
				{
					"id": 1133,
					"name": "ButtonConstraint",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 626
				},
				{
					"id": 1148,
					"name": "ButtonSymbols",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 986
				},
				{
					"id": 1090,
					"name": "ClickResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 130
				},
				{
					"id": 1091,
					"name": "ClickResponses",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 264
				},
				{
					"id": 1101,
					"name": "Collapsible",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 281
				},
				{
					"id": 1100,
					"name": "CollapsibleAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 273
				},
				{
					"id": 1141,
					"name": "ColumnGenerator",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 799
				},
				{
					"id": 1140,
					"name": "ColumnSpec",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 796
				},
				{
					"id": 1115,
					"name": "EditCheckbox",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 308
				},
				{
					"id": 1114,
					"name": "EditCheckboxAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 299
				},
				{
					"id": 1104,
					"name": "EditDate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 403
				},
				{
					"id": 1107,
					"name": "EditDate",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 403
				},
				{
					"id": 1103,
					"name": "EditLabel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 376
				},
				{
					"id": 1106,
					"name": "EditLabel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 376
				},
				{
					"id": 1102,
					"name": "EditLabelAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 366
				},
				{
					"id": 1105,
					"name": "EditLabelAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 366
				},
				{
					"id": 1111,
					"name": "EditList",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 469
				},
				{
					"id": 1110,
					"name": "EditListAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 443
				},
				{
					"id": 1113,
					"name": "EditSelect",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 506
				},
				{
					"id": 1112,
					"name": "EditSelectAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 496
				},
				{
					"id": 1117,
					"name": "EditTextarea",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 535
				},
				{
					"id": 1116,
					"name": "EditTextareaAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 525
				},
				{
					"id": 1119,
					"name": "Grid",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 577
				},
				{
					"id": 1118,
					"name": "GridAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 570
				},
				{
					"id": 1121,
					"name": "Icon",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 66
				},
				{
					"id": 1120,
					"name": "IconAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 61
				},
				{
					"id": 1099,
					"name": "IconButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 244
				},
				{
					"id": 1098,
					"name": "IconButtonAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 228
				},
				{
					"id": 1138,
					"name": "IconButtons",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 696
				},
				{
					"id": 1137,
					"name": "IconbuttonsAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 685
				},
				{
					"id": 1123,
					"name": "Label",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 595
				},
				{
					"id": 1122,
					"name": "LabelAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 591
				},
				{
					"id": 1109,
					"name": "ListRow",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 479
				},
				{
					"id": 1125,
					"name": "Menu",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 721
				},
				{
					"id": 1124,
					"name": "MenuAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 706
				},
				{
					"id": 1126,
					"name": "MenuItem",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 730
				},
				{
					"id": 1128,
					"name": "MenuPanel",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 739
				},
				{
					"id": 1127,
					"name": "MenuPanelAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 733
				},
				{
					"id": 1130,
					"name": "Modal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 767
				},
				{
					"id": 1129,
					"name": "ModalAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 757
				},
				{
					"id": 1155,
					"name": "MouseEventsAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 43
				},
				{
					"id": 1097,
					"name": "OnOffButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 208
				},
				{
					"id": 1096,
					"name": "OnOffButtonAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 193
				},
				{
					"id": 1134,
					"name": "OptionButtons",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 636
				},
				{
					"id": 1131,
					"name": "OptionButtonsAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 610
				},
				{
					"id": 1144,
					"name": "Pivot",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 833
				},
				{
					"id": 1139,
					"name": "PivotAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 784
				},
				{
					"id": 1143,
					"name": "PivotHeader",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 854
				},
				{
					"id": 1146,
					"name": "Popup",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 331
				},
				{
					"id": 1145,
					"name": "PoupAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 327
				},
				{
					"id": 1136,
					"name": "RadioButtons",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 676
				},
				{
					"id": 1135,
					"name": "RadioButtonsAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 661
				},
				{
					"id": 1132,
					"name": "RemoteSet",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 622
				},
				{
					"id": 1108,
					"name": "RowRender",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 439
				},
				{
					"id": 1147,
					"name": "Slider",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 931
				},
				{
					"id": 1095,
					"name": "ToggleButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 174
				},
				{
					"id": 1094,
					"name": "ToggleButtonAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 159
				},
				{
					"id": 1149,
					"name": "ToolbarButton",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 978
				},
				{
					"id": 1150,
					"name": "TypeAhead",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 1071
				},
				{
					"id": 1152,
					"name": "ViewResult",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 59
				},
				{
					"id": 1151,
					"name": "Vnode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 56
				},
				{
					"id": 1154,
					"name": "Widget",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 34
				},
				{
					"id": 1153,
					"name": "WidgetAttrs",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {
						"isExported": true
					},
					"target": 2
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						1142,
						1093,
						1092,
						1133,
						1148,
						1090,
						1091,
						1101,
						1100,
						1141,
						1140,
						1115,
						1114,
						1104,
						1107,
						1103,
						1106,
						1102,
						1105,
						1111,
						1110,
						1113,
						1112,
						1117,
						1116,
						1119,
						1118,
						1121,
						1120,
						1099,
						1098,
						1138,
						1137,
						1123,
						1122,
						1109,
						1125,
						1124,
						1126,
						1128,
						1127,
						1130,
						1129,
						1155,
						1097,
						1096,
						1134,
						1131,
						1144,
						1139,
						1143,
						1146,
						1145,
						1136,
						1135,
						1132,
						1108,
						1147,
						1095,
						1094,
						1149,
						1150,
						1152,
						1151,
						1154,
						1153
					]
				}
			],
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1156,
			"name": "\"overview\"",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/overview.ts",
			"comment": {
				"shortText": "# hsWidgets",
				"text": "Helpful Scripts UI widgets.\n<a href=\"./data/src/hsWidget/coverage/\" target=\"_blank\">[Coverage Info]</a>\n\n[![npm version](https://badge.fury.io/js/hswidget.svg)](https://badge.fury.io/js/hswidget)\n[![GitHub](https://img.shields.io/badge/GitHub-hsWidget-blue.svg)](https://github.com/helpfulscripts/hswidget)\n[![docs](https://img.shields.io/badge/hsDocs-hsWidget-blue.svg)](https://helpfulscripts.github.io/hsWidget/#!/api/hsWidget/0)\n[![Build Status](https://travis-ci.org/HelpfulScripts/hsWidget.svg?branch=master)](https://travis-ci.org/HelpfulScripts/hsWidget)\n[![Dependencies Status](https://david-dm.org/helpfulscripts/hswidget.svg)](https://david-dm.org/helpfulscripts/hswidget)\n[![codecov](https://codecov.io/gh/HelpfulScripts/hsWidget/branch/master/graph/badge.svg)](https://codecov.io/gh/HelpfulScripts/hsWidget)\n[![Known Vulnerabilities](https://snyk.io/test/github/HelpfulScripts/hsWidget/badge.svg?targetFile=package.json)](https://snyk.io/test/github/HelpfulScripts/hsWidget?targetFile=package.json)\n[![NPM License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://www.npmjs.com/package/hswidget)\n\n___\n\n*hsWidgets** Provides various UI widgets for use with mithril:\n\n\n| Widget | Description |\n|========|=============|\n| &nbsp; {@link Grid Grid} | Widgets implementing CSS Grids |\n| &nbsp; {@link Menu Menu} | A group of horizontal menu items that can trigger actions |\n| &nbsp; {@link Icon Icon} | Shows an [MDI](https://materialdesignicons.com/) icon with optional text label. |\n| &nbsp; {@link Button Button} | A simple stateless button widget |\n| &nbsp; {@link Button.ToggleButton - ToggleButton} | A stateful button widget that toggles through its defined states |\n| &nbsp; {@link Button.OnOffButton - OnOffButton} | A two-state on/off button widget |\n| &nbsp; {@link Button.IconButton - IconButton} | An Icon button that can be `on` or `off` |\n| &nbsp; {@link Optionbuttons Button groups} | A button widget that toggleds through a number of items |\n| &nbsp; {@link Optionbuttons.OptionButtons - OptionButtons} | A group of `OnOffbuttons`, any of which can be `on` at any time |\n| &nbsp; {@link Optionbuttons.RadioButtons - RadioButtons} | A group of `OnOffbuttons`, only one of which can be `on` at any time |\n| &nbsp; {@link Collapsible Collapsible} | A panel that will expand znd collapse when the title is clicked |\n| &nbsp; {@link Modal Modal} | A modal panel that will cover the entire window until released. |\n| &nbsp; {@link TypeAhead TypeAhead} | A TypeAhead search input form. |\n| &nbsp; {@link Slider Slider} | A simple nominal or continuous slider. |\n| &nbsp; {@link EditLabel EditLabel} | A text label that turns into a single-line input field when clicked on. |\n| &nbsp; {@link EditSelect EditSelect} | A text label with pulldown select capability. |\n| &nbsp; {@link EditList EditList} | An auto-extending list of editable rows. |\n\n<example height=500px>\n<file name='script.js'>const render = () => m.mount(root, {view: () => m('.hs_white', { class: 'overview' }, [    \n    m('.topGap'),\n\n    // Buttons:\n    m('.myButtons',[\n        m('h2', 'Buttons'),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Button.Button'}, 'Button'), `: Please click: (${clicked}-times clicked)`]),\n        m(hsWidget.Button, { onclick: () => clicked++ }, 'click me'),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Button.ToggleButton'}, 'ToggleButton'), `: Please Toggle between 1st, 2nd, and 3rd`]),\n        m(hsWidget.ToggleButton, { \n            onclick: (item, state) => toggle = state\n        }, content),\n        m(hsWidget.Grid, {style:'height: 100px;', columns:'' }, [\n            m('', [\n                m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Button.IconButton'}, 'IconButton'), `: Power ${icon}`]),\n                m(hsWidget.IconButton, { \n                    mdi:'power',\n                    onclick: (item) => icon = ['off', 'on'][item]\n                }),\n            ]),\n            m('', [\n                m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Button.IconButton'}, 'OnOffButton'), `: Power ${onOff}`]),\n                m(hsWidget.OnOffButton, { \n                    onclick: (item, state) => onOff = state\n                }, 'power'),\n            ])\n        ]),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Optionbuttons.RadioButtons'}, 'RadioButtons'), `: Select Station: ${radio}`]),\n        m(hsWidget.RadioButtons, { onclick: (item) => radio = content[item]\n        }, content),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Optionbuttons.OptionButtons'}, 'OptionButtons'), `: Select Option: '${Object.keys(options).map(k=>options[k]).join(\" \")}'`]),\n        m(hsWidget.OptionButtons, { \n            onclick: (item) => options[content[item]] = options[content[item]]? undefined : content[item]\n        }, content),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Optionbuttons.IconButtons'}, 'IconButtons'), `: Select Option: '${Object.keys(iconsSel).map(k=>iconsSel[k]).join(\" \")}'`]),\n        m(hsWidget.IconButtons, { \n            class: 'hsIconButtons',\n            onclick: (item) => iconsSel[icons[item]] = iconsSel[icons[item]]? undefined : icons[item]\n        }, ['power', 'info', 'warn', 'stop'].map(i => m(hsWidget.Icon,{mdi:i}))),\n    ]),\n\n\n\n    // Menus:\n    m('.myMenus',[\n        m('h2', 'Menus'),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Menu.Menu'}, 'Menu'), `: ${theContent} selected`]),\n        m(hsWidget.Menu, { class: 'myMenu',\n            initial: 1, // 0..2\n            onclick: (item) => theContent = content[item]\n        }, menuItems),\n        m('.myMenuMain', `${theContent} managed by the app`),\n\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Menu.MenuPanel'}, 'MenuPanel'), `:`]),\n        m(hsWidget.MenuPanel, { class: 'myMenu',\n            initial: 1, // 0..2\n            menuItems: menuItems,\n        }, content.map(c => `${c} managed by 'MenuPanel'`)),\n    ]),\n\n    // Modal Dialog Box:\n    m('.myDialog',[\n        m('h2.myGapModal', 'Modal Dialog Box'),\n        m('h4', {onclick:() => showModal=true }, \n            [m('a',{href:'#!/api/hsWidget/hsWidget.Modal.Modal'}, 'Modal'), `: Click me to open a modal box (previous dismissals: ${dismissals})`]),\n            !showModal? '' : m(hsWidget.Modal, \n                { dismiss: () => { showModal=false; dismissals++; }},\n                m('', 'click on border or on the background to release')\n            ) \n    ]),\n\n    // Popup Box:\n    m('.myPopup',[\n        m('h2.myGapPopup', 'Popup Box'),\n        m('h4', hsWidget.Popup.arm('!!Jack in the Box!!'), [\n            m('a',{href:'#!/api/hsWidget/hsWidget.Popup.Popup'}, 'Popup'), `: Hover over me to open a popup`]),\n            m(hsWidget.Popup, {})\n    ]),\n\n\n\n    // Collapsibles:\n    m('.myColl',[\n        m('h2', 'Collapsibles'),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.Collapsible.Collapsible'}, 'Collapsible'), ': ']),\n        m(hsWidget.Collapsible, { \n            class:'myCollapsible',\n            transition: 1000\n        }, [\n            m('.myTitle', 'click me to toggle - no arrows'), ...content \n        ]),\n        m(hsWidget.Collapsible, { class:'myCollapsible', preArrow:true}, [\n            m('.myTitle', 'click me to toggle - left arrow'), ...content \n        ]),\n        m(hsWidget.Collapsible, { class:'myCollapsible', postArrow:true}, [\n            m('.myTitle', 'click me to toggle - right arrow'), ...content \n        ]),\n        m(hsWidget.Collapsible, { class:'myCollapsible', preArrow:true, postArrow:true}, [\n            m('.myTitle', 'click me to toggle - both arrows'), ...content\n        ]),\n        m('', 'Background text, will be pushed down by the Collapsible')\n    ]),\n\n    // Typeahead Search:\n    m('.myType',[\n        m('h2.myGapTypeAhead', 'Typeahead Search'),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.TypeAhead.TypeAhead'}, 'TypeAhead'), `: In-Memory List: ${hero.length? 'Selected1: ' + hero : 'Search for a Superhero'}`]),\n        m(hsWidget.TypeAhead, { \n            placeholder: 'favorite hero',\n            onsubmit: item => hero = item,\n            list: ['Batman', 'Superman', 'Spiderman', 'Hulk']\n        }),\n        m('h4', [m('a',{href:'#!/api/hsWidget/hsWidget.TypeAhead.TypeAhead'}, 'TypeAhead'), `: Remote List: ${friend.length? 'Selected2: '+ friend : 'Search for a Friend'}`]),\n        m(hsWidget.TypeAhead, { \n            placeholder: 'best friend',\n            onsubmit: item => friend = item,\n            autofocus: true,\n            list: 'example/search.json'\n        })\n    ]),\n\n    // Corner Buttons:\n    m('.myCorner',[\n        m('h2.myGapCornerButtons', 'Corner Buttons'),\n        m('', Object.keys(hsWidget.ButtonSymbols).map(\n            b => m('.myCornerPositioned', [\n                btnClicked[b]? m('.myCornerClicked', 'Yayy!!') : m('', b),\n                m(hsWidget.ToolbarButton, { \n                    symbols:hsWidget.ToolbarButton.getSymbol(b), onclick:click(b) \n                })\n            ])\n        ))\n    ]),\n\n\n\n\n    // Slider:\n    m('.mySlider',[\n        m('h2.mySliders', 'Sliders'),\n        m('h4', `Nominal Slider: ${nom}`),\n        m(hsWidget.Slider, { \n            range: ['one', 'two', 'three'],\n            onchange: v => nom=v\n        }),\n        m('h4', `Continuous Slider: ${con}`),\n        m(hsWidget.Slider, {\n            range: [0, 100],\n            onchange: v => con=Math.floor(v*10)/10\n        })\n    ]),\n\n    // EditLabel\n    m('.myELabel',[\n        m('h2.myEditLabel', `EditLabel: '${editLabelContent}'`),\n        m(hsWidget.EditLabel, { \n            placeholder: 'Enter here...',\n            update: newValue => editLabelContent = newValue\n        }, editLabelContent),\n    ]),\n\n    // EditSelect\n    m('.myESelect',[\n        m('h2.myEditSelect', `EditSelect: ${esSelected}`),\n        m(hsWidget.EditSelect, { \n            selected: esSelected,\n            update: newValue => esSelected = newValue\n        }, ['first','second','third']),\n    ]),\n\n    // EditList\n    m('.myEList',[\n        m('h2.myEditList', 'EditList'),\n        m(hsWidget.EditList, { \n            header: 'List Header',\n            isExpanded:true,\n            rows: elContent\n        }),\n    ]),\n\n    // EditCheckbox\n    m('.myECheck',[\n        m('h2.myEditCheckbox', 'EditCheckbox'),\n        m(hsWidget.EditCheckbox, { \n            update: newValue => checkbox = newValue\n        }, `${checkbox}: I am ${checkbox?'' : 'not '}a robot`),\n    ]),\n])})\n// ]))});\n\n\n//--------------------------------------\n// supporting variables:\nconst menuItems = ['One', 'Two', 'Three'];\nconst content   = ['1st', '2nd', '3rd'];\nlet theContent = content[1];\nlet clicked = 0;\nlet radio = '';\nlet option = '';\nlet options = {};\nlet icons = ['power', 'info', 'warn', 'stop'];\nlet iconsSel = {};\nlet toggle = '';\nlet icon = '';\nlet onOff = ''; \nlet added  = 0;\nlet removed  = 0;\nconst btnClicked = {};\nlet lastCornerButton = '';\nlet dismissals = 0;\nlet showModal = false;\nlet hero = '';\nlet friend = '';\nlet nom, con;\nlet editLabelContent = '';\nlet esSelected = '';\nlet elContent = [''];\nlet checkbox = false;\n\nconst click = (button) => () => {\n   lastCornerButton = '';\n   if (hsWidget.ButtonSymbols[button]) {\n      lastCornerButton = m.trust(`last button pressed: ${hsWidget.ButtonSymbols[button].sym}`);\n      btnClicked[button] = true;\n      setTimeout(reset(button), 800);\n   }\n};\n\nconst reset = (button) => () => {\n   btnClicked[button] = false;\n   m.redraw();\n}\n\nrender();\n   </file>\n<file name='style.css'>.overview>div  {\n    width: 100%;\n}\n.myMenuMain { \n   border:1px solid #ddd;\n   border-top: 0px solid #ddd;\n   background-color: white;\n} \n\n.myCollapsible {\n    margin-bottom: 5px;\n}\n.myCollapsible .hs-collapsible-title {\n    font-weight:bold;\n    background-color: #eee;\n}\n.myCollapsible .hs-collapsible-expanded {\n    margin-left: 10px;\n}\n.myCornerClicked { background-color: #efe; }\n.myCornerPositioned { \n     position: relative; \n     display: inline-block;\n     box-sizing: border-box;\n     background-color: #eee; \n     text-align: center;\n     font-size: 70%;\n     margin:  2px;\n     padding-top: 20px;\n     height: 50px;\n     width:  50px;\n}\n.hs-corner-button { color: #008; }\n\n.hs-radio-buttons>.hs-column-layout>.hs-layout { border-color: transparent}\n\n.hsedit_label { \n   background-color: #eee;\n}\n   \n.topGap     { height: 100px; }\n.myButtons  { height: 680px; }\n.myMenus    { height: 280px; }\n.myDialog   { height: 180px; }\n.myPopup    { height: 200px; }\n.myColl     { height: 340px; }\n.myType     { height: 300px; }\n.myCorner   { height: 280px; }\n.mySlider   { height: 250px; }\n.myELabel   { height: 150px; }\n.myESelect  { height: 150px; }\n.myEList    { height: 150px; }\n.myECheck   { height: 180px; }\n\n.hsIconButtons.hs_optionbutton {\n    width:0;\n}\n.hsIconButtons .hs_onoff_button {\n    padding:0;\n    width: 32px;\n}\n\n.hsIconButtons .hs_onoff_button.state0 {\n    background-color: #dde;\n}\n\n.hsIconButtons .hs_onoff_button.state1 {\n    background-color: #aab;\n}\n\n.hsIconButtons .hs_onoff_button.state1 .hs_icon {\n    filter: invert(100%) hue-rotate(180deg) brightness(2);\n}\n\n.hsIconButtons .hs_onoff_button .hs_icon {\n    width: 80%;\n    height:80%;\n}\n</file>\n</example>\n"
			},
			"sources": [
				{
					"fileName": "sth1pal/Documents/Development/JavaScript/nodejs/ts6/dev/hsLibs/mithril/hsWidget/src/overview.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				129,
				267,
				298,
				365,
				435,
				495,
				524,
				569,
				60,
				590,
				705,
				756,
				604,
				783,
				326,
				930,
				87,
				977,
				1047,
				1,
				1089,
				1156
			]
		}
	]
}