@ButtonColor:     #48f;
@ButtonIdleColor: #dde;
@ButtonRadius:      6px;
@SelectedColor: lighten(@ButtonColor, 20%);
@DeselectColor: #dde;
@BoxShadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
@buttonSmallSize: 30px;

@iconButtonColor: @ButtonIdleColor;
@iconStrokeColor: #443;
@iconStrokeColorSelected: #fff;
@iconBorderRadius: 3px;

.hs_abstract_button_group {
    user-select: none;
    display: grid;
    font-size: 1rem;
    height: 2rem;
    margin:  0px;
    box-sizing: border-box;
    align-items: center;
    justify-items: center;
    box-shadow: @BoxShadow;
    border-radius: @ButtonRadius;
}

.hs_button {
    .hs_abstract_button_group;
    padding: 0 10px;
    color: white;
    background-color: @ButtonColor;
    &:hover {
        filter: brightness(95%);
    }
    &.hs_pressed {
        filter: brightness(80%);
    }
    span {
        vertical-align: middle;
    }
}

.hs_disabled {
    filter: grayscale(1) contrast(50%) brightness(120%);
}

.hs_onoff_button {
    &.state0 {   // off state
        background-color: @ButtonIdleColor;
        color: @iconStrokeColor;
    }
    &.state1 {   // on state
        background-color: @ButtonColor;
    }
}


.hs_icon_button {
    padding: 0;
    border: 1px solid #888;
    border-radius: @iconBorderRadius;
    width:  unit(@buttonSmallSize, px);
    height: unit(@buttonSmallSize, px);
    & .hs_icon {
        fill: inherit;
        stroke: inherit;
    }
    &.state0 { 
        background-color: @iconButtonColor; 
        fill: @iconStrokeColor;
        stroke: @iconStrokeColor;
    }
    &.state1 { 
        background-color: darken(@iconButtonColor, 20%); 
        fill: @iconStrokeColorSelected;
        stroke: @iconStrokeColorSelected;
    }
}